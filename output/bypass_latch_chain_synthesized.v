
// Generated by Cadence Genus(TM) Synthesis Solution 16.10-p006_1
// Generated on: Nov 11 2016 17:36:50

// Verification Directory fv/bypass_latch_chain 

module latch_word_width72(en, in, out);
  input en;
  input [71:0] in;
  output [71:0] out;
  wire en;
  wire [71:0] in;
  wire [71:0] out;
  DFFSNQ_X1 \_out_reg[63] (.SN (1'b1), .CLK (en), .D (in[63]), .Q
       (out[63]));
  DFFSNQ_X1 \_out_reg[70] (.SN (1'b1), .CLK (en), .D (in[70]), .Q
       (out[70]));
  DFFSNQ_X1 \_out_reg[68] (.SN (1'b1), .CLK (en), .D (in[68]), .Q
       (out[68]));
  DFFSNQ_X1 \_out_reg[64] (.SN (1'b1), .CLK (en), .D (in[64]), .Q
       (out[64]));
  DFFSNQ_X1 \_out_reg[56] (.SN (1'b1), .CLK (en), .D (in[56]), .Q
       (out[56]));
  DFFSNQ_X1 \_out_reg[40] (.SN (1'b1), .CLK (en), .D (in[40]), .Q
       (out[40]));
  DFFSNQ_X1 \_out_reg[8] (.SN (1'b1), .CLK (en), .D (in[8]), .Q
       (out[8]));
  DFFSNQ_X1 \_out_reg[7] (.SN (1'b1), .CLK (en), .D (in[7]), .Q
       (out[7]));
  DFFSNQ_X1 \_out_reg[39] (.SN (1'b1), .CLK (en), .D (in[39]), .Q
       (out[39]));
  DFFSNQ_X1 \_out_reg[6] (.SN (1'b1), .CLK (en), .D (in[6]), .Q
       (out[6]));
  DFFSNQ_X1 \_out_reg[5] (.SN (1'b1), .CLK (en), .D (in[5]), .Q
       (out[5]));
  DFFSNQ_X1 \_out_reg[55] (.SN (1'b1), .CLK (en), .D (in[55]), .Q
       (out[55]));
  DFFSNQ_X1 \_out_reg[38] (.SN (1'b1), .CLK (en), .D (in[38]), .Q
       (out[38]));
  DFFSNQ_X1 \_out_reg[4] (.SN (1'b1), .CLK (en), .D (in[4]), .Q
       (out[4]));
  DFFSNQ_X1 \_out_reg[3] (.SN (1'b1), .CLK (en), .D (in[3]), .Q
       (out[3]));
  DFFSNQ_X1 \_out_reg[37] (.SN (1'b1), .CLK (en), .D (in[37]), .Q
       (out[37]));
  DFFSNQ_X1 \_out_reg[2] (.SN (1'b1), .CLK (en), .D (in[2]), .Q
       (out[2]));
  DFFSNQ_X1 \_out_reg[1] (.SN (1'b1), .CLK (en), .D (in[1]), .Q
       (out[1]));
  DFFSNQ_X1 \_out_reg[71] (.SN (1'b1), .CLK (en), .D (in[71]), .Q
       (out[71]));
  DFFSNQ_X1 \_out_reg[54] (.SN (1'b1), .CLK (en), .D (in[54]), .Q
       (out[54]));
  DFFSNQ_X1 \_out_reg[36] (.SN (1'b1), .CLK (en), .D (in[36]), .Q
       (out[36]));
  DFFSNQ_X1 \_out_reg[0] (.SN (1'b1), .CLK (en), .D (in[0]), .Q
       (out[0]));
  DFFSNQ_X1 \_out_reg[35] (.SN (1'b1), .CLK (en), .D (in[35]), .Q
       (out[35]));
  DFFSNQ_X1 \_out_reg[53] (.SN (1'b1), .CLK (en), .D (in[53]), .Q
       (out[53]));
  DFFSNQ_X1 \_out_reg[34] (.SN (1'b1), .CLK (en), .D (in[34]), .Q
       (out[34]));
  DFFSNQ_X1 \_out_reg[33] (.SN (1'b1), .CLK (en), .D (in[33]), .Q
       (out[33]));
  DFFSNQ_X1 \_out_reg[67] (.SN (1'b1), .CLK (en), .D (in[67]), .Q
       (out[67]));
  DFFSNQ_X1 \_out_reg[62] (.SN (1'b1), .CLK (en), .D (in[62]), .Q
       (out[62]));
  DFFSNQ_X1 \_out_reg[52] (.SN (1'b1), .CLK (en), .D (in[52]), .Q
       (out[52]));
  DFFSNQ_X1 \_out_reg[32] (.SN (1'b1), .CLK (en), .D (in[32]), .Q
       (out[32]));
  DFFSNQ_X1 \_out_reg[31] (.SN (1'b1), .CLK (en), .D (in[31]), .Q
       (out[31]));
  DFFSNQ_X1 \_out_reg[51] (.SN (1'b1), .CLK (en), .D (in[51]), .Q
       (out[51]));
  DFFSNQ_X1 \_out_reg[30] (.SN (1'b1), .CLK (en), .D (in[30]), .Q
       (out[30]));
  DFFSNQ_X1 \_out_reg[29] (.SN (1'b1), .CLK (en), .D (in[29]), .Q
       (out[29]));
  DFFSNQ_X1 \_out_reg[61] (.SN (1'b1), .CLK (en), .D (in[61]), .Q
       (out[61]));
  DFFSNQ_X1 \_out_reg[50] (.SN (1'b1), .CLK (en), .D (in[50]), .Q
       (out[50]));
  DFFSNQ_X1 \_out_reg[45] (.SN (1'b1), .CLK (en), .D (in[45]), .Q
       (out[45]));
  DFFSNQ_X1 \_out_reg[27] (.SN (1'b1), .CLK (en), .D (in[27]), .Q
       (out[27]));
  DFFSNQ_X1 \_out_reg[49] (.SN (1'b1), .CLK (en), .D (in[49]), .Q
       (out[49]));
  DFFSNQ_X1 \_out_reg[26] (.SN (1'b1), .CLK (en), .D (in[26]), .Q
       (out[26]));
  DFFSNQ_X1 \_out_reg[25] (.SN (1'b1), .CLK (en), .D (in[25]), .Q
       (out[25]));
  DFFSNQ_X1 \_out_reg[69] (.SN (1'b1), .CLK (en), .D (in[69]), .Q
       (out[69]));
  DFFSNQ_X1 \_out_reg[66] (.SN (1'b1), .CLK (en), .D (in[66]), .Q
       (out[66]));
  DFFSNQ_X1 \_out_reg[60] (.SN (1'b1), .CLK (en), .D (in[60]), .Q
       (out[60]));
  DFFSNQ_X1 \_out_reg[48] (.SN (1'b1), .CLK (en), .D (in[48]), .Q
       (out[48]));
  DFFSNQ_X1 \_out_reg[24] (.SN (1'b1), .CLK (en), .D (in[24]), .Q
       (out[24]));
  DFFSNQ_X1 \_out_reg[23] (.SN (1'b1), .CLK (en), .D (in[23]), .Q
       (out[23]));
  DFFSNQ_X1 \_out_reg[47] (.SN (1'b1), .CLK (en), .D (in[47]), .Q
       (out[47]));
  DFFSNQ_X1 \_out_reg[22] (.SN (1'b1), .CLK (en), .D (in[22]), .Q
       (out[22]));
  DFFSNQ_X1 \_out_reg[21] (.SN (1'b1), .CLK (en), .D (in[21]), .Q
       (out[21]));
  DFFSNQ_X1 \_out_reg[59] (.SN (1'b1), .CLK (en), .D (in[59]), .Q
       (out[59]));
  DFFSNQ_X1 \_out_reg[46] (.SN (1'b1), .CLK (en), .D (in[46]), .Q
       (out[46]));
  DFFSNQ_X1 \_out_reg[20] (.SN (1'b1), .CLK (en), .D (in[20]), .Q
       (out[20]));
  DFFSNQ_X1 \_out_reg[19] (.SN (1'b1), .CLK (en), .D (in[19]), .Q
       (out[19]));
  DFFSNQ_X1 \_out_reg[28] (.SN (1'b1), .CLK (en), .D (in[28]), .Q
       (out[28]));
  DFFSNQ_X1 \_out_reg[18] (.SN (1'b1), .CLK (en), .D (in[18]), .Q
       (out[18]));
  DFFSNQ_X1 \_out_reg[17] (.SN (1'b1), .CLK (en), .D (in[17]), .Q
       (out[17]));
  DFFSNQ_X1 \_out_reg[65] (.SN (1'b1), .CLK (en), .D (in[65]), .Q
       (out[65]));
  DFFSNQ_X1 \_out_reg[58] (.SN (1'b1), .CLK (en), .D (in[58]), .Q
       (out[58]));
  DFFSNQ_X1 \_out_reg[44] (.SN (1'b1), .CLK (en), .D (in[44]), .Q
       (out[44]));
  DFFSNQ_X1 \_out_reg[16] (.SN (1'b1), .CLK (en), .D (in[16]), .Q
       (out[16]));
  DFFSNQ_X1 \_out_reg[15] (.SN (1'b1), .CLK (en), .D (in[15]), .Q
       (out[15]));
  DFFSNQ_X1 \_out_reg[43] (.SN (1'b1), .CLK (en), .D (in[43]), .Q
       (out[43]));
  DFFSNQ_X1 \_out_reg[14] (.SN (1'b1), .CLK (en), .D (in[14]), .Q
       (out[14]));
  DFFSNQ_X1 \_out_reg[13] (.SN (1'b1), .CLK (en), .D (in[13]), .Q
       (out[13]));
  DFFSNQ_X1 \_out_reg[57] (.SN (1'b1), .CLK (en), .D (in[57]), .Q
       (out[57]));
  DFFSNQ_X1 \_out_reg[42] (.SN (1'b1), .CLK (en), .D (in[42]), .Q
       (out[42]));
  DFFSNQ_X1 \_out_reg[12] (.SN (1'b1), .CLK (en), .D (in[12]), .Q
       (out[12]));
  DFFSNQ_X1 \_out_reg[11] (.SN (1'b1), .CLK (en), .D (in[11]), .Q
       (out[11]));
  DFFSNQ_X1 \_out_reg[41] (.SN (1'b1), .CLK (en), .D (in[41]), .Q
       (out[41]));
  DFFSNQ_X1 \_out_reg[10] (.SN (1'b1), .CLK (en), .D (in[10]), .Q
       (out[10]));
  DFFSNQ_X1 \_out_reg[9] (.SN (1'b1), .CLK (en), .D (in[9]), .Q
       (out[9]));
endmodule

module bypass_latch_width72(clk, in, out);
  input clk;
  input [71:0] in;
  output [71:0] out;
  wire clk;
  wire [71:0] in;
  wire [71:0] out;
  latch_word_width72 master_latch(.en (clk), .in (in), .out (out));
endmodule

module latch_word_width72_1(en, in, out);
  input en;
  input [71:0] in;
  output [71:0] out;
  wire en;
  wire [71:0] in;
  wire [71:0] out;
  DFFSNQ_X1 \_out_reg[63] (.SN (1'b1), .CLK (en), .D (in[63]), .Q
       (out[63]));
  DFFSNQ_X1 \_out_reg[70] (.SN (1'b1), .CLK (en), .D (in[70]), .Q
       (out[70]));
  DFFSNQ_X1 \_out_reg[68] (.SN (1'b1), .CLK (en), .D (in[68]), .Q
       (out[68]));
  DFFSNQ_X1 \_out_reg[64] (.SN (1'b1), .CLK (en), .D (in[64]), .Q
       (out[64]));
  DFFSNQ_X1 \_out_reg[56] (.SN (1'b1), .CLK (en), .D (in[56]), .Q
       (out[56]));
  DFFSNQ_X1 \_out_reg[40] (.SN (1'b1), .CLK (en), .D (in[40]), .Q
       (out[40]));
  DFFSNQ_X1 \_out_reg[8] (.SN (1'b1), .CLK (en), .D (in[8]), .Q
       (out[8]));
  DFFSNQ_X1 \_out_reg[7] (.SN (1'b1), .CLK (en), .D (in[7]), .Q
       (out[7]));
  DFFSNQ_X1 \_out_reg[39] (.SN (1'b1), .CLK (en), .D (in[39]), .Q
       (out[39]));
  DFFSNQ_X1 \_out_reg[6] (.SN (1'b1), .CLK (en), .D (in[6]), .Q
       (out[6]));
  DFFSNQ_X1 \_out_reg[5] (.SN (1'b1), .CLK (en), .D (in[5]), .Q
       (out[5]));
  DFFSNQ_X1 \_out_reg[55] (.SN (1'b1), .CLK (en), .D (in[55]), .Q
       (out[55]));
  DFFSNQ_X1 \_out_reg[38] (.SN (1'b1), .CLK (en), .D (in[38]), .Q
       (out[38]));
  DFFSNQ_X1 \_out_reg[4] (.SN (1'b1), .CLK (en), .D (in[4]), .Q
       (out[4]));
  DFFSNQ_X1 \_out_reg[3] (.SN (1'b1), .CLK (en), .D (in[3]), .Q
       (out[3]));
  DFFSNQ_X1 \_out_reg[37] (.SN (1'b1), .CLK (en), .D (in[37]), .Q
       (out[37]));
  DFFSNQ_X1 \_out_reg[2] (.SN (1'b1), .CLK (en), .D (in[2]), .Q
       (out[2]));
  DFFSNQ_X1 \_out_reg[1] (.SN (1'b1), .CLK (en), .D (in[1]), .Q
       (out[1]));
  DFFSNQ_X1 \_out_reg[71] (.SN (1'b1), .CLK (en), .D (in[71]), .Q
       (out[71]));
  DFFSNQ_X1 \_out_reg[54] (.SN (1'b1), .CLK (en), .D (in[54]), .Q
       (out[54]));
  DFFSNQ_X1 \_out_reg[36] (.SN (1'b1), .CLK (en), .D (in[36]), .Q
       (out[36]));
  DFFSNQ_X1 \_out_reg[0] (.SN (1'b1), .CLK (en), .D (in[0]), .Q
       (out[0]));
  DFFSNQ_X1 \_out_reg[35] (.SN (1'b1), .CLK (en), .D (in[35]), .Q
       (out[35]));
  DFFSNQ_X1 \_out_reg[53] (.SN (1'b1), .CLK (en), .D (in[53]), .Q
       (out[53]));
  DFFSNQ_X1 \_out_reg[34] (.SN (1'b1), .CLK (en), .D (in[34]), .Q
       (out[34]));
  DFFSNQ_X1 \_out_reg[33] (.SN (1'b1), .CLK (en), .D (in[33]), .Q
       (out[33]));
  DFFSNQ_X1 \_out_reg[67] (.SN (1'b1), .CLK (en), .D (in[67]), .Q
       (out[67]));
  DFFSNQ_X1 \_out_reg[62] (.SN (1'b1), .CLK (en), .D (in[62]), .Q
       (out[62]));
  DFFSNQ_X1 \_out_reg[52] (.SN (1'b1), .CLK (en), .D (in[52]), .Q
       (out[52]));
  DFFSNQ_X1 \_out_reg[32] (.SN (1'b1), .CLK (en), .D (in[32]), .Q
       (out[32]));
  DFFSNQ_X1 \_out_reg[31] (.SN (1'b1), .CLK (en), .D (in[31]), .Q
       (out[31]));
  DFFSNQ_X1 \_out_reg[51] (.SN (1'b1), .CLK (en), .D (in[51]), .Q
       (out[51]));
  DFFSNQ_X1 \_out_reg[30] (.SN (1'b1), .CLK (en), .D (in[30]), .Q
       (out[30]));
  DFFSNQ_X1 \_out_reg[29] (.SN (1'b1), .CLK (en), .D (in[29]), .Q
       (out[29]));
  DFFSNQ_X1 \_out_reg[61] (.SN (1'b1), .CLK (en), .D (in[61]), .Q
       (out[61]));
  DFFSNQ_X1 \_out_reg[50] (.SN (1'b1), .CLK (en), .D (in[50]), .Q
       (out[50]));
  DFFSNQ_X1 \_out_reg[45] (.SN (1'b1), .CLK (en), .D (in[45]), .Q
       (out[45]));
  DFFSNQ_X1 \_out_reg[27] (.SN (1'b1), .CLK (en), .D (in[27]), .Q
       (out[27]));
  DFFSNQ_X1 \_out_reg[49] (.SN (1'b1), .CLK (en), .D (in[49]), .Q
       (out[49]));
  DFFSNQ_X1 \_out_reg[26] (.SN (1'b1), .CLK (en), .D (in[26]), .Q
       (out[26]));
  DFFSNQ_X1 \_out_reg[25] (.SN (1'b1), .CLK (en), .D (in[25]), .Q
       (out[25]));
  DFFSNQ_X1 \_out_reg[69] (.SN (1'b1), .CLK (en), .D (in[69]), .Q
       (out[69]));
  DFFSNQ_X1 \_out_reg[66] (.SN (1'b1), .CLK (en), .D (in[66]), .Q
       (out[66]));
  DFFSNQ_X1 \_out_reg[60] (.SN (1'b1), .CLK (en), .D (in[60]), .Q
       (out[60]));
  DFFSNQ_X1 \_out_reg[48] (.SN (1'b1), .CLK (en), .D (in[48]), .Q
       (out[48]));
  DFFSNQ_X1 \_out_reg[24] (.SN (1'b1), .CLK (en), .D (in[24]), .Q
       (out[24]));
  DFFSNQ_X1 \_out_reg[23] (.SN (1'b1), .CLK (en), .D (in[23]), .Q
       (out[23]));
  DFFSNQ_X1 \_out_reg[47] (.SN (1'b1), .CLK (en), .D (in[47]), .Q
       (out[47]));
  DFFSNQ_X1 \_out_reg[22] (.SN (1'b1), .CLK (en), .D (in[22]), .Q
       (out[22]));
  DFFSNQ_X1 \_out_reg[21] (.SN (1'b1), .CLK (en), .D (in[21]), .Q
       (out[21]));
  DFFSNQ_X1 \_out_reg[59] (.SN (1'b1), .CLK (en), .D (in[59]), .Q
       (out[59]));
  DFFSNQ_X1 \_out_reg[46] (.SN (1'b1), .CLK (en), .D (in[46]), .Q
       (out[46]));
  DFFSNQ_X1 \_out_reg[20] (.SN (1'b1), .CLK (en), .D (in[20]), .Q
       (out[20]));
  DFFSNQ_X1 \_out_reg[19] (.SN (1'b1), .CLK (en), .D (in[19]), .Q
       (out[19]));
  DFFSNQ_X1 \_out_reg[28] (.SN (1'b1), .CLK (en), .D (in[28]), .Q
       (out[28]));
  DFFSNQ_X1 \_out_reg[18] (.SN (1'b1), .CLK (en), .D (in[18]), .Q
       (out[18]));
  DFFSNQ_X1 \_out_reg[17] (.SN (1'b1), .CLK (en), .D (in[17]), .Q
       (out[17]));
  DFFSNQ_X1 \_out_reg[65] (.SN (1'b1), .CLK (en), .D (in[65]), .Q
       (out[65]));
  DFFSNQ_X1 \_out_reg[58] (.SN (1'b1), .CLK (en), .D (in[58]), .Q
       (out[58]));
  DFFSNQ_X1 \_out_reg[44] (.SN (1'b1), .CLK (en), .D (in[44]), .Q
       (out[44]));
  DFFSNQ_X1 \_out_reg[16] (.SN (1'b1), .CLK (en), .D (in[16]), .Q
       (out[16]));
  DFFSNQ_X1 \_out_reg[15] (.SN (1'b1), .CLK (en), .D (in[15]), .Q
       (out[15]));
  DFFSNQ_X1 \_out_reg[43] (.SN (1'b1), .CLK (en), .D (in[43]), .Q
       (out[43]));
  DFFSNQ_X1 \_out_reg[14] (.SN (1'b1), .CLK (en), .D (in[14]), .Q
       (out[14]));
  DFFSNQ_X1 \_out_reg[13] (.SN (1'b1), .CLK (en), .D (in[13]), .Q
       (out[13]));
  DFFSNQ_X1 \_out_reg[57] (.SN (1'b1), .CLK (en), .D (in[57]), .Q
       (out[57]));
  DFFSNQ_X1 \_out_reg[42] (.SN (1'b1), .CLK (en), .D (in[42]), .Q
       (out[42]));
  DFFSNQ_X1 \_out_reg[12] (.SN (1'b1), .CLK (en), .D (in[12]), .Q
       (out[12]));
  DFFSNQ_X1 \_out_reg[11] (.SN (1'b1), .CLK (en), .D (in[11]), .Q
       (out[11]));
  DFFSNQ_X1 \_out_reg[41] (.SN (1'b1), .CLK (en), .D (in[41]), .Q
       (out[41]));
  DFFSNQ_X1 \_out_reg[10] (.SN (1'b1), .CLK (en), .D (in[10]), .Q
       (out[10]));
  DFFSNQ_X1 \_out_reg[9] (.SN (1'b1), .CLK (en), .D (in[9]), .Q
       (out[9]));
endmodule

module bypass_latch_width72_1(clk, in, out);
  input clk;
  input [71:0] in;
  output [71:0] out;
  wire clk;
  wire [71:0] in;
  wire [71:0] out;
  latch_word_width72_1 master_latch(.en (clk), .in (in), .out (out));
endmodule

module latch_word_width72_2(en, in, out);
  input en;
  input [71:0] in;
  output [71:0] out;
  wire en;
  wire [71:0] in;
  wire [71:0] out;
  DFFSNQ_X1 \_out_reg[63] (.SN (1'b1), .CLK (en), .D (in[63]), .Q
       (out[63]));
  DFFSNQ_X1 \_out_reg[70] (.SN (1'b1), .CLK (en), .D (in[70]), .Q
       (out[70]));
  DFFSNQ_X1 \_out_reg[68] (.SN (1'b1), .CLK (en), .D (in[68]), .Q
       (out[68]));
  DFFSNQ_X1 \_out_reg[64] (.SN (1'b1), .CLK (en), .D (in[64]), .Q
       (out[64]));
  DFFSNQ_X1 \_out_reg[56] (.SN (1'b1), .CLK (en), .D (in[56]), .Q
       (out[56]));
  DFFSNQ_X1 \_out_reg[40] (.SN (1'b1), .CLK (en), .D (in[40]), .Q
       (out[40]));
  DFFSNQ_X1 \_out_reg[8] (.SN (1'b1), .CLK (en), .D (in[8]), .Q
       (out[8]));
  DFFSNQ_X1 \_out_reg[7] (.SN (1'b1), .CLK (en), .D (in[7]), .Q
       (out[7]));
  DFFSNQ_X1 \_out_reg[39] (.SN (1'b1), .CLK (en), .D (in[39]), .Q
       (out[39]));
  DFFSNQ_X1 \_out_reg[6] (.SN (1'b1), .CLK (en), .D (in[6]), .Q
       (out[6]));
  DFFSNQ_X1 \_out_reg[5] (.SN (1'b1), .CLK (en), .D (in[5]), .Q
       (out[5]));
  DFFSNQ_X1 \_out_reg[55] (.SN (1'b1), .CLK (en), .D (in[55]), .Q
       (out[55]));
  DFFSNQ_X1 \_out_reg[38] (.SN (1'b1), .CLK (en), .D (in[38]), .Q
       (out[38]));
  DFFSNQ_X1 \_out_reg[4] (.SN (1'b1), .CLK (en), .D (in[4]), .Q
       (out[4]));
  DFFSNQ_X1 \_out_reg[3] (.SN (1'b1), .CLK (en), .D (in[3]), .Q
       (out[3]));
  DFFSNQ_X1 \_out_reg[37] (.SN (1'b1), .CLK (en), .D (in[37]), .Q
       (out[37]));
  DFFSNQ_X1 \_out_reg[2] (.SN (1'b1), .CLK (en), .D (in[2]), .Q
       (out[2]));
  DFFSNQ_X1 \_out_reg[1] (.SN (1'b1), .CLK (en), .D (in[1]), .Q
       (out[1]));
  DFFSNQ_X1 \_out_reg[71] (.SN (1'b1), .CLK (en), .D (in[71]), .Q
       (out[71]));
  DFFSNQ_X1 \_out_reg[54] (.SN (1'b1), .CLK (en), .D (in[54]), .Q
       (out[54]));
  DFFSNQ_X1 \_out_reg[36] (.SN (1'b1), .CLK (en), .D (in[36]), .Q
       (out[36]));
  DFFSNQ_X1 \_out_reg[0] (.SN (1'b1), .CLK (en), .D (in[0]), .Q
       (out[0]));
  DFFSNQ_X1 \_out_reg[35] (.SN (1'b1), .CLK (en), .D (in[35]), .Q
       (out[35]));
  DFFSNQ_X1 \_out_reg[53] (.SN (1'b1), .CLK (en), .D (in[53]), .Q
       (out[53]));
  DFFSNQ_X1 \_out_reg[34] (.SN (1'b1), .CLK (en), .D (in[34]), .Q
       (out[34]));
  DFFSNQ_X1 \_out_reg[33] (.SN (1'b1), .CLK (en), .D (in[33]), .Q
       (out[33]));
  DFFSNQ_X1 \_out_reg[67] (.SN (1'b1), .CLK (en), .D (in[67]), .Q
       (out[67]));
  DFFSNQ_X1 \_out_reg[62] (.SN (1'b1), .CLK (en), .D (in[62]), .Q
       (out[62]));
  DFFSNQ_X1 \_out_reg[52] (.SN (1'b1), .CLK (en), .D (in[52]), .Q
       (out[52]));
  DFFSNQ_X1 \_out_reg[32] (.SN (1'b1), .CLK (en), .D (in[32]), .Q
       (out[32]));
  DFFSNQ_X1 \_out_reg[31] (.SN (1'b1), .CLK (en), .D (in[31]), .Q
       (out[31]));
  DFFSNQ_X1 \_out_reg[51] (.SN (1'b1), .CLK (en), .D (in[51]), .Q
       (out[51]));
  DFFSNQ_X1 \_out_reg[30] (.SN (1'b1), .CLK (en), .D (in[30]), .Q
       (out[30]));
  DFFSNQ_X1 \_out_reg[29] (.SN (1'b1), .CLK (en), .D (in[29]), .Q
       (out[29]));
  DFFSNQ_X1 \_out_reg[61] (.SN (1'b1), .CLK (en), .D (in[61]), .Q
       (out[61]));
  DFFSNQ_X1 \_out_reg[50] (.SN (1'b1), .CLK (en), .D (in[50]), .Q
       (out[50]));
  DFFSNQ_X1 \_out_reg[45] (.SN (1'b1), .CLK (en), .D (in[45]), .Q
       (out[45]));
  DFFSNQ_X1 \_out_reg[27] (.SN (1'b1), .CLK (en), .D (in[27]), .Q
       (out[27]));
  DFFSNQ_X1 \_out_reg[49] (.SN (1'b1), .CLK (en), .D (in[49]), .Q
       (out[49]));
  DFFSNQ_X1 \_out_reg[26] (.SN (1'b1), .CLK (en), .D (in[26]), .Q
       (out[26]));
  DFFSNQ_X1 \_out_reg[25] (.SN (1'b1), .CLK (en), .D (in[25]), .Q
       (out[25]));
  DFFSNQ_X1 \_out_reg[69] (.SN (1'b1), .CLK (en), .D (in[69]), .Q
       (out[69]));
  DFFSNQ_X1 \_out_reg[66] (.SN (1'b1), .CLK (en), .D (in[66]), .Q
       (out[66]));
  DFFSNQ_X1 \_out_reg[60] (.SN (1'b1), .CLK (en), .D (in[60]), .Q
       (out[60]));
  DFFSNQ_X1 \_out_reg[48] (.SN (1'b1), .CLK (en), .D (in[48]), .Q
       (out[48]));
  DFFSNQ_X1 \_out_reg[24] (.SN (1'b1), .CLK (en), .D (in[24]), .Q
       (out[24]));
  DFFSNQ_X1 \_out_reg[23] (.SN (1'b1), .CLK (en), .D (in[23]), .Q
       (out[23]));
  DFFSNQ_X1 \_out_reg[47] (.SN (1'b1), .CLK (en), .D (in[47]), .Q
       (out[47]));
  DFFSNQ_X1 \_out_reg[22] (.SN (1'b1), .CLK (en), .D (in[22]), .Q
       (out[22]));
  DFFSNQ_X1 \_out_reg[21] (.SN (1'b1), .CLK (en), .D (in[21]), .Q
       (out[21]));
  DFFSNQ_X1 \_out_reg[59] (.SN (1'b1), .CLK (en), .D (in[59]), .Q
       (out[59]));
  DFFSNQ_X1 \_out_reg[46] (.SN (1'b1), .CLK (en), .D (in[46]), .Q
       (out[46]));
  DFFSNQ_X1 \_out_reg[20] (.SN (1'b1), .CLK (en), .D (in[20]), .Q
       (out[20]));
  DFFSNQ_X1 \_out_reg[19] (.SN (1'b1), .CLK (en), .D (in[19]), .Q
       (out[19]));
  DFFSNQ_X1 \_out_reg[28] (.SN (1'b1), .CLK (en), .D (in[28]), .Q
       (out[28]));
  DFFSNQ_X1 \_out_reg[18] (.SN (1'b1), .CLK (en), .D (in[18]), .Q
       (out[18]));
  DFFSNQ_X1 \_out_reg[17] (.SN (1'b1), .CLK (en), .D (in[17]), .Q
       (out[17]));
  DFFSNQ_X1 \_out_reg[65] (.SN (1'b1), .CLK (en), .D (in[65]), .Q
       (out[65]));
  DFFSNQ_X1 \_out_reg[58] (.SN (1'b1), .CLK (en), .D (in[58]), .Q
       (out[58]));
  DFFSNQ_X1 \_out_reg[44] (.SN (1'b1), .CLK (en), .D (in[44]), .Q
       (out[44]));
  DFFSNQ_X1 \_out_reg[16] (.SN (1'b1), .CLK (en), .D (in[16]), .Q
       (out[16]));
  DFFSNQ_X1 \_out_reg[15] (.SN (1'b1), .CLK (en), .D (in[15]), .Q
       (out[15]));
  DFFSNQ_X1 \_out_reg[43] (.SN (1'b1), .CLK (en), .D (in[43]), .Q
       (out[43]));
  DFFSNQ_X1 \_out_reg[14] (.SN (1'b1), .CLK (en), .D (in[14]), .Q
       (out[14]));
  DFFSNQ_X1 \_out_reg[13] (.SN (1'b1), .CLK (en), .D (in[13]), .Q
       (out[13]));
  DFFSNQ_X1 \_out_reg[57] (.SN (1'b1), .CLK (en), .D (in[57]), .Q
       (out[57]));
  DFFSNQ_X1 \_out_reg[42] (.SN (1'b1), .CLK (en), .D (in[42]), .Q
       (out[42]));
  DFFSNQ_X1 \_out_reg[12] (.SN (1'b1), .CLK (en), .D (in[12]), .Q
       (out[12]));
  DFFSNQ_X1 \_out_reg[11] (.SN (1'b1), .CLK (en), .D (in[11]), .Q
       (out[11]));
  DFFSNQ_X1 \_out_reg[41] (.SN (1'b1), .CLK (en), .D (in[41]), .Q
       (out[41]));
  DFFSNQ_X1 \_out_reg[10] (.SN (1'b1), .CLK (en), .D (in[10]), .Q
       (out[10]));
  DFFSNQ_X1 \_out_reg[9] (.SN (1'b1), .CLK (en), .D (in[9]), .Q
       (out[9]));
endmodule

module bypass_latch_width72_2(clk, in, out);
  input clk;
  input [71:0] in;
  output [71:0] out;
  wire clk;
  wire [71:0] in;
  wire [71:0] out;
  latch_word_width72_2 master_latch(.en (clk), .in (in), .out (out));
endmodule

module latch_word_width72_3(en, in, out);
  input en;
  input [71:0] in;
  output [71:0] out;
  wire en;
  wire [71:0] in;
  wire [71:0] out;
  DFFSNQ_X1 \_out_reg[63] (.SN (1'b1), .CLK (en), .D (in[63]), .Q
       (out[63]));
  DFFSNQ_X1 \_out_reg[70] (.SN (1'b1), .CLK (en), .D (in[70]), .Q
       (out[70]));
  DFFSNQ_X1 \_out_reg[68] (.SN (1'b1), .CLK (en), .D (in[68]), .Q
       (out[68]));
  DFFSNQ_X1 \_out_reg[64] (.SN (1'b1), .CLK (en), .D (in[64]), .Q
       (out[64]));
  DFFSNQ_X1 \_out_reg[56] (.SN (1'b1), .CLK (en), .D (in[56]), .Q
       (out[56]));
  DFFSNQ_X1 \_out_reg[40] (.SN (1'b1), .CLK (en), .D (in[40]), .Q
       (out[40]));
  DFFSNQ_X1 \_out_reg[8] (.SN (1'b1), .CLK (en), .D (in[8]), .Q
       (out[8]));
  DFFSNQ_X1 \_out_reg[7] (.SN (1'b1), .CLK (en), .D (in[7]), .Q
       (out[7]));
  DFFSNQ_X1 \_out_reg[39] (.SN (1'b1), .CLK (en), .D (in[39]), .Q
       (out[39]));
  DFFSNQ_X1 \_out_reg[6] (.SN (1'b1), .CLK (en), .D (in[6]), .Q
       (out[6]));
  DFFSNQ_X1 \_out_reg[5] (.SN (1'b1), .CLK (en), .D (in[5]), .Q
       (out[5]));
  DFFSNQ_X1 \_out_reg[55] (.SN (1'b1), .CLK (en), .D (in[55]), .Q
       (out[55]));
  DFFSNQ_X1 \_out_reg[38] (.SN (1'b1), .CLK (en), .D (in[38]), .Q
       (out[38]));
  DFFSNQ_X1 \_out_reg[4] (.SN (1'b1), .CLK (en), .D (in[4]), .Q
       (out[4]));
  DFFSNQ_X1 \_out_reg[3] (.SN (1'b1), .CLK (en), .D (in[3]), .Q
       (out[3]));
  DFFSNQ_X1 \_out_reg[37] (.SN (1'b1), .CLK (en), .D (in[37]), .Q
       (out[37]));
  DFFSNQ_X1 \_out_reg[2] (.SN (1'b1), .CLK (en), .D (in[2]), .Q
       (out[2]));
  DFFSNQ_X1 \_out_reg[1] (.SN (1'b1), .CLK (en), .D (in[1]), .Q
       (out[1]));
  DFFSNQ_X1 \_out_reg[71] (.SN (1'b1), .CLK (en), .D (in[71]), .Q
       (out[71]));
  DFFSNQ_X1 \_out_reg[54] (.SN (1'b1), .CLK (en), .D (in[54]), .Q
       (out[54]));
  DFFSNQ_X1 \_out_reg[36] (.SN (1'b1), .CLK (en), .D (in[36]), .Q
       (out[36]));
  DFFSNQ_X1 \_out_reg[0] (.SN (1'b1), .CLK (en), .D (in[0]), .Q
       (out[0]));
  DFFSNQ_X1 \_out_reg[35] (.SN (1'b1), .CLK (en), .D (in[35]), .Q
       (out[35]));
  DFFSNQ_X1 \_out_reg[53] (.SN (1'b1), .CLK (en), .D (in[53]), .Q
       (out[53]));
  DFFSNQ_X1 \_out_reg[34] (.SN (1'b1), .CLK (en), .D (in[34]), .Q
       (out[34]));
  DFFSNQ_X1 \_out_reg[33] (.SN (1'b1), .CLK (en), .D (in[33]), .Q
       (out[33]));
  DFFSNQ_X1 \_out_reg[67] (.SN (1'b1), .CLK (en), .D (in[67]), .Q
       (out[67]));
  DFFSNQ_X1 \_out_reg[62] (.SN (1'b1), .CLK (en), .D (in[62]), .Q
       (out[62]));
  DFFSNQ_X1 \_out_reg[52] (.SN (1'b1), .CLK (en), .D (in[52]), .Q
       (out[52]));
  DFFSNQ_X1 \_out_reg[32] (.SN (1'b1), .CLK (en), .D (in[32]), .Q
       (out[32]));
  DFFSNQ_X1 \_out_reg[31] (.SN (1'b1), .CLK (en), .D (in[31]), .Q
       (out[31]));
  DFFSNQ_X1 \_out_reg[51] (.SN (1'b1), .CLK (en), .D (in[51]), .Q
       (out[51]));
  DFFSNQ_X1 \_out_reg[30] (.SN (1'b1), .CLK (en), .D (in[30]), .Q
       (out[30]));
  DFFSNQ_X1 \_out_reg[29] (.SN (1'b1), .CLK (en), .D (in[29]), .Q
       (out[29]));
  DFFSNQ_X1 \_out_reg[61] (.SN (1'b1), .CLK (en), .D (in[61]), .Q
       (out[61]));
  DFFSNQ_X1 \_out_reg[50] (.SN (1'b1), .CLK (en), .D (in[50]), .Q
       (out[50]));
  DFFSNQ_X1 \_out_reg[45] (.SN (1'b1), .CLK (en), .D (in[45]), .Q
       (out[45]));
  DFFSNQ_X1 \_out_reg[27] (.SN (1'b1), .CLK (en), .D (in[27]), .Q
       (out[27]));
  DFFSNQ_X1 \_out_reg[49] (.SN (1'b1), .CLK (en), .D (in[49]), .Q
       (out[49]));
  DFFSNQ_X1 \_out_reg[26] (.SN (1'b1), .CLK (en), .D (in[26]), .Q
       (out[26]));
  DFFSNQ_X1 \_out_reg[25] (.SN (1'b1), .CLK (en), .D (in[25]), .Q
       (out[25]));
  DFFSNQ_X1 \_out_reg[69] (.SN (1'b1), .CLK (en), .D (in[69]), .Q
       (out[69]));
  DFFSNQ_X1 \_out_reg[66] (.SN (1'b1), .CLK (en), .D (in[66]), .Q
       (out[66]));
  DFFSNQ_X1 \_out_reg[60] (.SN (1'b1), .CLK (en), .D (in[60]), .Q
       (out[60]));
  DFFSNQ_X1 \_out_reg[48] (.SN (1'b1), .CLK (en), .D (in[48]), .Q
       (out[48]));
  DFFSNQ_X1 \_out_reg[24] (.SN (1'b1), .CLK (en), .D (in[24]), .Q
       (out[24]));
  DFFSNQ_X1 \_out_reg[23] (.SN (1'b1), .CLK (en), .D (in[23]), .Q
       (out[23]));
  DFFSNQ_X1 \_out_reg[47] (.SN (1'b1), .CLK (en), .D (in[47]), .Q
       (out[47]));
  DFFSNQ_X1 \_out_reg[22] (.SN (1'b1), .CLK (en), .D (in[22]), .Q
       (out[22]));
  DFFSNQ_X1 \_out_reg[21] (.SN (1'b1), .CLK (en), .D (in[21]), .Q
       (out[21]));
  DFFSNQ_X1 \_out_reg[59] (.SN (1'b1), .CLK (en), .D (in[59]), .Q
       (out[59]));
  DFFSNQ_X1 \_out_reg[46] (.SN (1'b1), .CLK (en), .D (in[46]), .Q
       (out[46]));
  DFFSNQ_X1 \_out_reg[20] (.SN (1'b1), .CLK (en), .D (in[20]), .Q
       (out[20]));
  DFFSNQ_X1 \_out_reg[19] (.SN (1'b1), .CLK (en), .D (in[19]), .Q
       (out[19]));
  DFFSNQ_X1 \_out_reg[28] (.SN (1'b1), .CLK (en), .D (in[28]), .Q
       (out[28]));
  DFFSNQ_X1 \_out_reg[18] (.SN (1'b1), .CLK (en), .D (in[18]), .Q
       (out[18]));
  DFFSNQ_X1 \_out_reg[17] (.SN (1'b1), .CLK (en), .D (in[17]), .Q
       (out[17]));
  DFFSNQ_X1 \_out_reg[65] (.SN (1'b1), .CLK (en), .D (in[65]), .Q
       (out[65]));
  DFFSNQ_X1 \_out_reg[58] (.SN (1'b1), .CLK (en), .D (in[58]), .Q
       (out[58]));
  DFFSNQ_X1 \_out_reg[44] (.SN (1'b1), .CLK (en), .D (in[44]), .Q
       (out[44]));
  DFFSNQ_X1 \_out_reg[16] (.SN (1'b1), .CLK (en), .D (in[16]), .Q
       (out[16]));
  DFFSNQ_X1 \_out_reg[15] (.SN (1'b1), .CLK (en), .D (in[15]), .Q
       (out[15]));
  DFFSNQ_X1 \_out_reg[43] (.SN (1'b1), .CLK (en), .D (in[43]), .Q
       (out[43]));
  DFFSNQ_X1 \_out_reg[14] (.SN (1'b1), .CLK (en), .D (in[14]), .Q
       (out[14]));
  DFFSNQ_X1 \_out_reg[13] (.SN (1'b1), .CLK (en), .D (in[13]), .Q
       (out[13]));
  DFFSNQ_X1 \_out_reg[57] (.SN (1'b1), .CLK (en), .D (in[57]), .Q
       (out[57]));
  DFFSNQ_X1 \_out_reg[42] (.SN (1'b1), .CLK (en), .D (in[42]), .Q
       (out[42]));
  DFFSNQ_X1 \_out_reg[12] (.SN (1'b1), .CLK (en), .D (in[12]), .Q
       (out[12]));
  DFFSNQ_X1 \_out_reg[11] (.SN (1'b1), .CLK (en), .D (in[11]), .Q
       (out[11]));
  DFFSNQ_X1 \_out_reg[41] (.SN (1'b1), .CLK (en), .D (in[41]), .Q
       (out[41]));
  DFFSNQ_X1 \_out_reg[10] (.SN (1'b1), .CLK (en), .D (in[10]), .Q
       (out[10]));
  DFFSNQ_X1 \_out_reg[9] (.SN (1'b1), .CLK (en), .D (in[9]), .Q
       (out[9]));
endmodule

module bypass_latch_width72_3(clk, in, out);
  input clk;
  input [71:0] in;
  output [71:0] out;
  wire clk;
  wire [71:0] in;
  wire [71:0] out;
  latch_word_width72_3 master_latch(.en (clk), .in (in), .out (out));
endmodule

module latch_word_width72_4(en, in, out);
  input en;
  input [71:0] in;
  output [71:0] out;
  wire en;
  wire [71:0] in;
  wire [71:0] out;
  DFFSNQ_X1 \_out_reg[63] (.SN (1'b1), .CLK (en), .D (in[63]), .Q
       (out[63]));
  DFFSNQ_X1 \_out_reg[70] (.SN (1'b1), .CLK (en), .D (in[70]), .Q
       (out[70]));
  DFFSNQ_X1 \_out_reg[68] (.SN (1'b1), .CLK (en), .D (in[68]), .Q
       (out[68]));
  DFFSNQ_X1 \_out_reg[64] (.SN (1'b1), .CLK (en), .D (in[64]), .Q
       (out[64]));
  DFFSNQ_X1 \_out_reg[56] (.SN (1'b1), .CLK (en), .D (in[56]), .Q
       (out[56]));
  DFFSNQ_X1 \_out_reg[40] (.SN (1'b1), .CLK (en), .D (in[40]), .Q
       (out[40]));
  DFFSNQ_X1 \_out_reg[8] (.SN (1'b1), .CLK (en), .D (in[8]), .Q
       (out[8]));
  DFFSNQ_X1 \_out_reg[7] (.SN (1'b1), .CLK (en), .D (in[7]), .Q
       (out[7]));
  DFFSNQ_X1 \_out_reg[39] (.SN (1'b1), .CLK (en), .D (in[39]), .Q
       (out[39]));
  DFFSNQ_X1 \_out_reg[6] (.SN (1'b1), .CLK (en), .D (in[6]), .Q
       (out[6]));
  DFFSNQ_X1 \_out_reg[5] (.SN (1'b1), .CLK (en), .D (in[5]), .Q
       (out[5]));
  DFFSNQ_X1 \_out_reg[55] (.SN (1'b1), .CLK (en), .D (in[55]), .Q
       (out[55]));
  DFFSNQ_X1 \_out_reg[38] (.SN (1'b1), .CLK (en), .D (in[38]), .Q
       (out[38]));
  DFFSNQ_X1 \_out_reg[4] (.SN (1'b1), .CLK (en), .D (in[4]), .Q
       (out[4]));
  DFFSNQ_X1 \_out_reg[3] (.SN (1'b1), .CLK (en), .D (in[3]), .Q
       (out[3]));
  DFFSNQ_X1 \_out_reg[37] (.SN (1'b1), .CLK (en), .D (in[37]), .Q
       (out[37]));
  DFFSNQ_X1 \_out_reg[2] (.SN (1'b1), .CLK (en), .D (in[2]), .Q
       (out[2]));
  DFFSNQ_X1 \_out_reg[1] (.SN (1'b1), .CLK (en), .D (in[1]), .Q
       (out[1]));
  DFFSNQ_X1 \_out_reg[71] (.SN (1'b1), .CLK (en), .D (in[71]), .Q
       (out[71]));
  DFFSNQ_X1 \_out_reg[54] (.SN (1'b1), .CLK (en), .D (in[54]), .Q
       (out[54]));
  DFFSNQ_X1 \_out_reg[36] (.SN (1'b1), .CLK (en), .D (in[36]), .Q
       (out[36]));
  DFFSNQ_X1 \_out_reg[0] (.SN (1'b1), .CLK (en), .D (in[0]), .Q
       (out[0]));
  DFFSNQ_X1 \_out_reg[35] (.SN (1'b1), .CLK (en), .D (in[35]), .Q
       (out[35]));
  DFFSNQ_X1 \_out_reg[53] (.SN (1'b1), .CLK (en), .D (in[53]), .Q
       (out[53]));
  DFFSNQ_X1 \_out_reg[34] (.SN (1'b1), .CLK (en), .D (in[34]), .Q
       (out[34]));
  DFFSNQ_X1 \_out_reg[33] (.SN (1'b1), .CLK (en), .D (in[33]), .Q
       (out[33]));
  DFFSNQ_X1 \_out_reg[67] (.SN (1'b1), .CLK (en), .D (in[67]), .Q
       (out[67]));
  DFFSNQ_X1 \_out_reg[62] (.SN (1'b1), .CLK (en), .D (in[62]), .Q
       (out[62]));
  DFFSNQ_X1 \_out_reg[52] (.SN (1'b1), .CLK (en), .D (in[52]), .Q
       (out[52]));
  DFFSNQ_X1 \_out_reg[32] (.SN (1'b1), .CLK (en), .D (in[32]), .Q
       (out[32]));
  DFFSNQ_X1 \_out_reg[31] (.SN (1'b1), .CLK (en), .D (in[31]), .Q
       (out[31]));
  DFFSNQ_X1 \_out_reg[51] (.SN (1'b1), .CLK (en), .D (in[51]), .Q
       (out[51]));
  DFFSNQ_X1 \_out_reg[30] (.SN (1'b1), .CLK (en), .D (in[30]), .Q
       (out[30]));
  DFFSNQ_X1 \_out_reg[29] (.SN (1'b1), .CLK (en), .D (in[29]), .Q
       (out[29]));
  DFFSNQ_X1 \_out_reg[61] (.SN (1'b1), .CLK (en), .D (in[61]), .Q
       (out[61]));
  DFFSNQ_X1 \_out_reg[50] (.SN (1'b1), .CLK (en), .D (in[50]), .Q
       (out[50]));
  DFFSNQ_X1 \_out_reg[45] (.SN (1'b1), .CLK (en), .D (in[45]), .Q
       (out[45]));
  DFFSNQ_X1 \_out_reg[27] (.SN (1'b1), .CLK (en), .D (in[27]), .Q
       (out[27]));
  DFFSNQ_X1 \_out_reg[49] (.SN (1'b1), .CLK (en), .D (in[49]), .Q
       (out[49]));
  DFFSNQ_X1 \_out_reg[26] (.SN (1'b1), .CLK (en), .D (in[26]), .Q
       (out[26]));
  DFFSNQ_X1 \_out_reg[25] (.SN (1'b1), .CLK (en), .D (in[25]), .Q
       (out[25]));
  DFFSNQ_X1 \_out_reg[69] (.SN (1'b1), .CLK (en), .D (in[69]), .Q
       (out[69]));
  DFFSNQ_X1 \_out_reg[66] (.SN (1'b1), .CLK (en), .D (in[66]), .Q
       (out[66]));
  DFFSNQ_X1 \_out_reg[60] (.SN (1'b1), .CLK (en), .D (in[60]), .Q
       (out[60]));
  DFFSNQ_X1 \_out_reg[48] (.SN (1'b1), .CLK (en), .D (in[48]), .Q
       (out[48]));
  DFFSNQ_X1 \_out_reg[24] (.SN (1'b1), .CLK (en), .D (in[24]), .Q
       (out[24]));
  DFFSNQ_X1 \_out_reg[23] (.SN (1'b1), .CLK (en), .D (in[23]), .Q
       (out[23]));
  DFFSNQ_X1 \_out_reg[47] (.SN (1'b1), .CLK (en), .D (in[47]), .Q
       (out[47]));
  DFFSNQ_X1 \_out_reg[22] (.SN (1'b1), .CLK (en), .D (in[22]), .Q
       (out[22]));
  DFFSNQ_X1 \_out_reg[21] (.SN (1'b1), .CLK (en), .D (in[21]), .Q
       (out[21]));
  DFFSNQ_X1 \_out_reg[59] (.SN (1'b1), .CLK (en), .D (in[59]), .Q
       (out[59]));
  DFFSNQ_X1 \_out_reg[46] (.SN (1'b1), .CLK (en), .D (in[46]), .Q
       (out[46]));
  DFFSNQ_X1 \_out_reg[20] (.SN (1'b1), .CLK (en), .D (in[20]), .Q
       (out[20]));
  DFFSNQ_X1 \_out_reg[19] (.SN (1'b1), .CLK (en), .D (in[19]), .Q
       (out[19]));
  DFFSNQ_X1 \_out_reg[28] (.SN (1'b1), .CLK (en), .D (in[28]), .Q
       (out[28]));
  DFFSNQ_X1 \_out_reg[18] (.SN (1'b1), .CLK (en), .D (in[18]), .Q
       (out[18]));
  DFFSNQ_X1 \_out_reg[17] (.SN (1'b1), .CLK (en), .D (in[17]), .Q
       (out[17]));
  DFFSNQ_X1 \_out_reg[65] (.SN (1'b1), .CLK (en), .D (in[65]), .Q
       (out[65]));
  DFFSNQ_X1 \_out_reg[58] (.SN (1'b1), .CLK (en), .D (in[58]), .Q
       (out[58]));
  DFFSNQ_X1 \_out_reg[44] (.SN (1'b1), .CLK (en), .D (in[44]), .Q
       (out[44]));
  DFFSNQ_X1 \_out_reg[16] (.SN (1'b1), .CLK (en), .D (in[16]), .Q
       (out[16]));
  DFFSNQ_X1 \_out_reg[15] (.SN (1'b1), .CLK (en), .D (in[15]), .Q
       (out[15]));
  DFFSNQ_X1 \_out_reg[43] (.SN (1'b1), .CLK (en), .D (in[43]), .Q
       (out[43]));
  DFFSNQ_X1 \_out_reg[14] (.SN (1'b1), .CLK (en), .D (in[14]), .Q
       (out[14]));
  DFFSNQ_X1 \_out_reg[13] (.SN (1'b1), .CLK (en), .D (in[13]), .Q
       (out[13]));
  DFFSNQ_X1 \_out_reg[57] (.SN (1'b1), .CLK (en), .D (in[57]), .Q
       (out[57]));
  DFFSNQ_X1 \_out_reg[42] (.SN (1'b1), .CLK (en), .D (in[42]), .Q
       (out[42]));
  DFFSNQ_X1 \_out_reg[12] (.SN (1'b1), .CLK (en), .D (in[12]), .Q
       (out[12]));
  DFFSNQ_X1 \_out_reg[11] (.SN (1'b1), .CLK (en), .D (in[11]), .Q
       (out[11]));
  DFFSNQ_X1 \_out_reg[41] (.SN (1'b1), .CLK (en), .D (in[41]), .Q
       (out[41]));
  DFFSNQ_X1 \_out_reg[10] (.SN (1'b1), .CLK (en), .D (in[10]), .Q
       (out[10]));
  DFFSNQ_X1 \_out_reg[9] (.SN (1'b1), .CLK (en), .D (in[9]), .Q
       (out[9]));
endmodule

module bypass_latch_width72_4(clk, in, out);
  input clk;
  input [71:0] in;
  output [71:0] out;
  wire clk;
  wire [71:0] in;
  wire [71:0] out;
  latch_word_width72_4 master_latch(.en (clk), .in (in), .out (out));
endmodule

module latch_word_width72_5(en, in, out);
  input en;
  input [71:0] in;
  output [71:0] out;
  wire en;
  wire [71:0] in;
  wire [71:0] out;
  DFFSNQ_X1 \_out_reg[63] (.SN (1'b1), .CLK (en), .D (in[63]), .Q
       (out[63]));
  DFFSNQ_X1 \_out_reg[70] (.SN (1'b1), .CLK (en), .D (in[70]), .Q
       (out[70]));
  DFFSNQ_X1 \_out_reg[68] (.SN (1'b1), .CLK (en), .D (in[68]), .Q
       (out[68]));
  DFFSNQ_X1 \_out_reg[64] (.SN (1'b1), .CLK (en), .D (in[64]), .Q
       (out[64]));
  DFFSNQ_X1 \_out_reg[56] (.SN (1'b1), .CLK (en), .D (in[56]), .Q
       (out[56]));
  DFFSNQ_X1 \_out_reg[40] (.SN (1'b1), .CLK (en), .D (in[40]), .Q
       (out[40]));
  DFFSNQ_X1 \_out_reg[8] (.SN (1'b1), .CLK (en), .D (in[8]), .Q
       (out[8]));
  DFFSNQ_X1 \_out_reg[7] (.SN (1'b1), .CLK (en), .D (in[7]), .Q
       (out[7]));
  DFFSNQ_X1 \_out_reg[39] (.SN (1'b1), .CLK (en), .D (in[39]), .Q
       (out[39]));
  DFFSNQ_X1 \_out_reg[6] (.SN (1'b1), .CLK (en), .D (in[6]), .Q
       (out[6]));
  DFFSNQ_X1 \_out_reg[5] (.SN (1'b1), .CLK (en), .D (in[5]), .Q
       (out[5]));
  DFFSNQ_X1 \_out_reg[55] (.SN (1'b1), .CLK (en), .D (in[55]), .Q
       (out[55]));
  DFFSNQ_X1 \_out_reg[38] (.SN (1'b1), .CLK (en), .D (in[38]), .Q
       (out[38]));
  DFFSNQ_X1 \_out_reg[4] (.SN (1'b1), .CLK (en), .D (in[4]), .Q
       (out[4]));
  DFFSNQ_X1 \_out_reg[3] (.SN (1'b1), .CLK (en), .D (in[3]), .Q
       (out[3]));
  DFFSNQ_X1 \_out_reg[37] (.SN (1'b1), .CLK (en), .D (in[37]), .Q
       (out[37]));
  DFFSNQ_X1 \_out_reg[2] (.SN (1'b1), .CLK (en), .D (in[2]), .Q
       (out[2]));
  DFFSNQ_X1 \_out_reg[1] (.SN (1'b1), .CLK (en), .D (in[1]), .Q
       (out[1]));
  DFFSNQ_X1 \_out_reg[71] (.SN (1'b1), .CLK (en), .D (in[71]), .Q
       (out[71]));
  DFFSNQ_X1 \_out_reg[54] (.SN (1'b1), .CLK (en), .D (in[54]), .Q
       (out[54]));
  DFFSNQ_X1 \_out_reg[36] (.SN (1'b1), .CLK (en), .D (in[36]), .Q
       (out[36]));
  DFFSNQ_X1 \_out_reg[0] (.SN (1'b1), .CLK (en), .D (in[0]), .Q
       (out[0]));
  DFFSNQ_X1 \_out_reg[35] (.SN (1'b1), .CLK (en), .D (in[35]), .Q
       (out[35]));
  DFFSNQ_X1 \_out_reg[53] (.SN (1'b1), .CLK (en), .D (in[53]), .Q
       (out[53]));
  DFFSNQ_X1 \_out_reg[34] (.SN (1'b1), .CLK (en), .D (in[34]), .Q
       (out[34]));
  DFFSNQ_X1 \_out_reg[33] (.SN (1'b1), .CLK (en), .D (in[33]), .Q
       (out[33]));
  DFFSNQ_X1 \_out_reg[67] (.SN (1'b1), .CLK (en), .D (in[67]), .Q
       (out[67]));
  DFFSNQ_X1 \_out_reg[62] (.SN (1'b1), .CLK (en), .D (in[62]), .Q
       (out[62]));
  DFFSNQ_X1 \_out_reg[52] (.SN (1'b1), .CLK (en), .D (in[52]), .Q
       (out[52]));
  DFFSNQ_X1 \_out_reg[32] (.SN (1'b1), .CLK (en), .D (in[32]), .Q
       (out[32]));
  DFFSNQ_X1 \_out_reg[31] (.SN (1'b1), .CLK (en), .D (in[31]), .Q
       (out[31]));
  DFFSNQ_X1 \_out_reg[51] (.SN (1'b1), .CLK (en), .D (in[51]), .Q
       (out[51]));
  DFFSNQ_X1 \_out_reg[30] (.SN (1'b1), .CLK (en), .D (in[30]), .Q
       (out[30]));
  DFFSNQ_X1 \_out_reg[29] (.SN (1'b1), .CLK (en), .D (in[29]), .Q
       (out[29]));
  DFFSNQ_X1 \_out_reg[61] (.SN (1'b1), .CLK (en), .D (in[61]), .Q
       (out[61]));
  DFFSNQ_X1 \_out_reg[50] (.SN (1'b1), .CLK (en), .D (in[50]), .Q
       (out[50]));
  DFFSNQ_X1 \_out_reg[45] (.SN (1'b1), .CLK (en), .D (in[45]), .Q
       (out[45]));
  DFFSNQ_X1 \_out_reg[27] (.SN (1'b1), .CLK (en), .D (in[27]), .Q
       (out[27]));
  DFFSNQ_X1 \_out_reg[49] (.SN (1'b1), .CLK (en), .D (in[49]), .Q
       (out[49]));
  DFFSNQ_X1 \_out_reg[26] (.SN (1'b1), .CLK (en), .D (in[26]), .Q
       (out[26]));
  DFFSNQ_X1 \_out_reg[25] (.SN (1'b1), .CLK (en), .D (in[25]), .Q
       (out[25]));
  DFFSNQ_X1 \_out_reg[69] (.SN (1'b1), .CLK (en), .D (in[69]), .Q
       (out[69]));
  DFFSNQ_X1 \_out_reg[66] (.SN (1'b1), .CLK (en), .D (in[66]), .Q
       (out[66]));
  DFFSNQ_X1 \_out_reg[60] (.SN (1'b1), .CLK (en), .D (in[60]), .Q
       (out[60]));
  DFFSNQ_X1 \_out_reg[48] (.SN (1'b1), .CLK (en), .D (in[48]), .Q
       (out[48]));
  DFFSNQ_X1 \_out_reg[24] (.SN (1'b1), .CLK (en), .D (in[24]), .Q
       (out[24]));
  DFFSNQ_X1 \_out_reg[23] (.SN (1'b1), .CLK (en), .D (in[23]), .Q
       (out[23]));
  DFFSNQ_X1 \_out_reg[47] (.SN (1'b1), .CLK (en), .D (in[47]), .Q
       (out[47]));
  DFFSNQ_X1 \_out_reg[22] (.SN (1'b1), .CLK (en), .D (in[22]), .Q
       (out[22]));
  DFFSNQ_X1 \_out_reg[21] (.SN (1'b1), .CLK (en), .D (in[21]), .Q
       (out[21]));
  DFFSNQ_X1 \_out_reg[59] (.SN (1'b1), .CLK (en), .D (in[59]), .Q
       (out[59]));
  DFFSNQ_X1 \_out_reg[46] (.SN (1'b1), .CLK (en), .D (in[46]), .Q
       (out[46]));
  DFFSNQ_X1 \_out_reg[20] (.SN (1'b1), .CLK (en), .D (in[20]), .Q
       (out[20]));
  DFFSNQ_X1 \_out_reg[19] (.SN (1'b1), .CLK (en), .D (in[19]), .Q
       (out[19]));
  DFFSNQ_X1 \_out_reg[28] (.SN (1'b1), .CLK (en), .D (in[28]), .Q
       (out[28]));
  DFFSNQ_X1 \_out_reg[18] (.SN (1'b1), .CLK (en), .D (in[18]), .Q
       (out[18]));
  DFFSNQ_X1 \_out_reg[17] (.SN (1'b1), .CLK (en), .D (in[17]), .Q
       (out[17]));
  DFFSNQ_X1 \_out_reg[65] (.SN (1'b1), .CLK (en), .D (in[65]), .Q
       (out[65]));
  DFFSNQ_X1 \_out_reg[58] (.SN (1'b1), .CLK (en), .D (in[58]), .Q
       (out[58]));
  DFFSNQ_X1 \_out_reg[44] (.SN (1'b1), .CLK (en), .D (in[44]), .Q
       (out[44]));
  DFFSNQ_X1 \_out_reg[16] (.SN (1'b1), .CLK (en), .D (in[16]), .Q
       (out[16]));
  DFFSNQ_X1 \_out_reg[15] (.SN (1'b1), .CLK (en), .D (in[15]), .Q
       (out[15]));
  DFFSNQ_X1 \_out_reg[43] (.SN (1'b1), .CLK (en), .D (in[43]), .Q
       (out[43]));
  DFFSNQ_X1 \_out_reg[14] (.SN (1'b1), .CLK (en), .D (in[14]), .Q
       (out[14]));
  DFFSNQ_X1 \_out_reg[13] (.SN (1'b1), .CLK (en), .D (in[13]), .Q
       (out[13]));
  DFFSNQ_X1 \_out_reg[57] (.SN (1'b1), .CLK (en), .D (in[57]), .Q
       (out[57]));
  DFFSNQ_X1 \_out_reg[42] (.SN (1'b1), .CLK (en), .D (in[42]), .Q
       (out[42]));
  DFFSNQ_X1 \_out_reg[12] (.SN (1'b1), .CLK (en), .D (in[12]), .Q
       (out[12]));
  DFFSNQ_X1 \_out_reg[11] (.SN (1'b1), .CLK (en), .D (in[11]), .Q
       (out[11]));
  DFFSNQ_X1 \_out_reg[41] (.SN (1'b1), .CLK (en), .D (in[41]), .Q
       (out[41]));
  DFFSNQ_X1 \_out_reg[10] (.SN (1'b1), .CLK (en), .D (in[10]), .Q
       (out[10]));
  DFFSNQ_X1 \_out_reg[9] (.SN (1'b1), .CLK (en), .D (in[9]), .Q
       (out[9]));
endmodule

module bypass_latch_width72_5(clk, in, out);
  input clk;
  input [71:0] in;
  output [71:0] out;
  wire clk;
  wire [71:0] in;
  wire [71:0] out;
  latch_word_width72_5 master_latch(.en (clk), .in (in), .out (out));
endmodule

module latch_word_width72_6(en, in, out);
  input en;
  input [71:0] in;
  output [71:0] out;
  wire en;
  wire [71:0] in;
  wire [71:0] out;
  DFFSNQ_X1 \_out_reg[63] (.SN (1'b1), .CLK (en), .D (in[63]), .Q
       (out[63]));
  DFFSNQ_X1 \_out_reg[70] (.SN (1'b1), .CLK (en), .D (in[70]), .Q
       (out[70]));
  DFFSNQ_X1 \_out_reg[68] (.SN (1'b1), .CLK (en), .D (in[68]), .Q
       (out[68]));
  DFFSNQ_X1 \_out_reg[64] (.SN (1'b1), .CLK (en), .D (in[64]), .Q
       (out[64]));
  DFFSNQ_X1 \_out_reg[56] (.SN (1'b1), .CLK (en), .D (in[56]), .Q
       (out[56]));
  DFFSNQ_X1 \_out_reg[40] (.SN (1'b1), .CLK (en), .D (in[40]), .Q
       (out[40]));
  DFFSNQ_X1 \_out_reg[8] (.SN (1'b1), .CLK (en), .D (in[8]), .Q
       (out[8]));
  DFFSNQ_X1 \_out_reg[7] (.SN (1'b1), .CLK (en), .D (in[7]), .Q
       (out[7]));
  DFFSNQ_X1 \_out_reg[39] (.SN (1'b1), .CLK (en), .D (in[39]), .Q
       (out[39]));
  DFFSNQ_X1 \_out_reg[6] (.SN (1'b1), .CLK (en), .D (in[6]), .Q
       (out[6]));
  DFFSNQ_X1 \_out_reg[5] (.SN (1'b1), .CLK (en), .D (in[5]), .Q
       (out[5]));
  DFFSNQ_X1 \_out_reg[55] (.SN (1'b1), .CLK (en), .D (in[55]), .Q
       (out[55]));
  DFFSNQ_X1 \_out_reg[38] (.SN (1'b1), .CLK (en), .D (in[38]), .Q
       (out[38]));
  DFFSNQ_X1 \_out_reg[4] (.SN (1'b1), .CLK (en), .D (in[4]), .Q
       (out[4]));
  DFFSNQ_X1 \_out_reg[3] (.SN (1'b1), .CLK (en), .D (in[3]), .Q
       (out[3]));
  DFFSNQ_X1 \_out_reg[37] (.SN (1'b1), .CLK (en), .D (in[37]), .Q
       (out[37]));
  DFFSNQ_X1 \_out_reg[2] (.SN (1'b1), .CLK (en), .D (in[2]), .Q
       (out[2]));
  DFFSNQ_X1 \_out_reg[1] (.SN (1'b1), .CLK (en), .D (in[1]), .Q
       (out[1]));
  DFFSNQ_X1 \_out_reg[71] (.SN (1'b1), .CLK (en), .D (in[71]), .Q
       (out[71]));
  DFFSNQ_X1 \_out_reg[54] (.SN (1'b1), .CLK (en), .D (in[54]), .Q
       (out[54]));
  DFFSNQ_X1 \_out_reg[36] (.SN (1'b1), .CLK (en), .D (in[36]), .Q
       (out[36]));
  DFFSNQ_X1 \_out_reg[0] (.SN (1'b1), .CLK (en), .D (in[0]), .Q
       (out[0]));
  DFFSNQ_X1 \_out_reg[35] (.SN (1'b1), .CLK (en), .D (in[35]), .Q
       (out[35]));
  DFFSNQ_X1 \_out_reg[53] (.SN (1'b1), .CLK (en), .D (in[53]), .Q
       (out[53]));
  DFFSNQ_X1 \_out_reg[34] (.SN (1'b1), .CLK (en), .D (in[34]), .Q
       (out[34]));
  DFFSNQ_X1 \_out_reg[33] (.SN (1'b1), .CLK (en), .D (in[33]), .Q
       (out[33]));
  DFFSNQ_X1 \_out_reg[67] (.SN (1'b1), .CLK (en), .D (in[67]), .Q
       (out[67]));
  DFFSNQ_X1 \_out_reg[62] (.SN (1'b1), .CLK (en), .D (in[62]), .Q
       (out[62]));
  DFFSNQ_X1 \_out_reg[52] (.SN (1'b1), .CLK (en), .D (in[52]), .Q
       (out[52]));
  DFFSNQ_X1 \_out_reg[32] (.SN (1'b1), .CLK (en), .D (in[32]), .Q
       (out[32]));
  DFFSNQ_X1 \_out_reg[31] (.SN (1'b1), .CLK (en), .D (in[31]), .Q
       (out[31]));
  DFFSNQ_X1 \_out_reg[51] (.SN (1'b1), .CLK (en), .D (in[51]), .Q
       (out[51]));
  DFFSNQ_X1 \_out_reg[30] (.SN (1'b1), .CLK (en), .D (in[30]), .Q
       (out[30]));
  DFFSNQ_X1 \_out_reg[29] (.SN (1'b1), .CLK (en), .D (in[29]), .Q
       (out[29]));
  DFFSNQ_X1 \_out_reg[61] (.SN (1'b1), .CLK (en), .D (in[61]), .Q
       (out[61]));
  DFFSNQ_X1 \_out_reg[50] (.SN (1'b1), .CLK (en), .D (in[50]), .Q
       (out[50]));
  DFFSNQ_X1 \_out_reg[45] (.SN (1'b1), .CLK (en), .D (in[45]), .Q
       (out[45]));
  DFFSNQ_X1 \_out_reg[27] (.SN (1'b1), .CLK (en), .D (in[27]), .Q
       (out[27]));
  DFFSNQ_X1 \_out_reg[49] (.SN (1'b1), .CLK (en), .D (in[49]), .Q
       (out[49]));
  DFFSNQ_X1 \_out_reg[26] (.SN (1'b1), .CLK (en), .D (in[26]), .Q
       (out[26]));
  DFFSNQ_X1 \_out_reg[25] (.SN (1'b1), .CLK (en), .D (in[25]), .Q
       (out[25]));
  DFFSNQ_X1 \_out_reg[69] (.SN (1'b1), .CLK (en), .D (in[69]), .Q
       (out[69]));
  DFFSNQ_X1 \_out_reg[66] (.SN (1'b1), .CLK (en), .D (in[66]), .Q
       (out[66]));
  DFFSNQ_X1 \_out_reg[60] (.SN (1'b1), .CLK (en), .D (in[60]), .Q
       (out[60]));
  DFFSNQ_X1 \_out_reg[48] (.SN (1'b1), .CLK (en), .D (in[48]), .Q
       (out[48]));
  DFFSNQ_X1 \_out_reg[24] (.SN (1'b1), .CLK (en), .D (in[24]), .Q
       (out[24]));
  DFFSNQ_X1 \_out_reg[23] (.SN (1'b1), .CLK (en), .D (in[23]), .Q
       (out[23]));
  DFFSNQ_X1 \_out_reg[47] (.SN (1'b1), .CLK (en), .D (in[47]), .Q
       (out[47]));
  DFFSNQ_X1 \_out_reg[22] (.SN (1'b1), .CLK (en), .D (in[22]), .Q
       (out[22]));
  DFFSNQ_X1 \_out_reg[21] (.SN (1'b1), .CLK (en), .D (in[21]), .Q
       (out[21]));
  DFFSNQ_X1 \_out_reg[59] (.SN (1'b1), .CLK (en), .D (in[59]), .Q
       (out[59]));
  DFFSNQ_X1 \_out_reg[46] (.SN (1'b1), .CLK (en), .D (in[46]), .Q
       (out[46]));
  DFFSNQ_X1 \_out_reg[20] (.SN (1'b1), .CLK (en), .D (in[20]), .Q
       (out[20]));
  DFFSNQ_X1 \_out_reg[19] (.SN (1'b1), .CLK (en), .D (in[19]), .Q
       (out[19]));
  DFFSNQ_X1 \_out_reg[28] (.SN (1'b1), .CLK (en), .D (in[28]), .Q
       (out[28]));
  DFFSNQ_X1 \_out_reg[18] (.SN (1'b1), .CLK (en), .D (in[18]), .Q
       (out[18]));
  DFFSNQ_X1 \_out_reg[17] (.SN (1'b1), .CLK (en), .D (in[17]), .Q
       (out[17]));
  DFFSNQ_X1 \_out_reg[65] (.SN (1'b1), .CLK (en), .D (in[65]), .Q
       (out[65]));
  DFFSNQ_X1 \_out_reg[58] (.SN (1'b1), .CLK (en), .D (in[58]), .Q
       (out[58]));
  DFFSNQ_X1 \_out_reg[44] (.SN (1'b1), .CLK (en), .D (in[44]), .Q
       (out[44]));
  DFFSNQ_X1 \_out_reg[16] (.SN (1'b1), .CLK (en), .D (in[16]), .Q
       (out[16]));
  DFFSNQ_X1 \_out_reg[15] (.SN (1'b1), .CLK (en), .D (in[15]), .Q
       (out[15]));
  DFFSNQ_X1 \_out_reg[43] (.SN (1'b1), .CLK (en), .D (in[43]), .Q
       (out[43]));
  DFFSNQ_X1 \_out_reg[14] (.SN (1'b1), .CLK (en), .D (in[14]), .Q
       (out[14]));
  DFFSNQ_X1 \_out_reg[13] (.SN (1'b1), .CLK (en), .D (in[13]), .Q
       (out[13]));
  DFFSNQ_X1 \_out_reg[57] (.SN (1'b1), .CLK (en), .D (in[57]), .Q
       (out[57]));
  DFFSNQ_X1 \_out_reg[42] (.SN (1'b1), .CLK (en), .D (in[42]), .Q
       (out[42]));
  DFFSNQ_X1 \_out_reg[12] (.SN (1'b1), .CLK (en), .D (in[12]), .Q
       (out[12]));
  DFFSNQ_X1 \_out_reg[11] (.SN (1'b1), .CLK (en), .D (in[11]), .Q
       (out[11]));
  DFFSNQ_X1 \_out_reg[41] (.SN (1'b1), .CLK (en), .D (in[41]), .Q
       (out[41]));
  DFFSNQ_X1 \_out_reg[10] (.SN (1'b1), .CLK (en), .D (in[10]), .Q
       (out[10]));
  DFFSNQ_X1 \_out_reg[9] (.SN (1'b1), .CLK (en), .D (in[9]), .Q
       (out[9]));
endmodule

module bypass_latch_width72_6(clk, in, out);
  input clk;
  input [71:0] in;
  output [71:0] out;
  wire clk;
  wire [71:0] in;
  wire [71:0] out;
  latch_word_width72_6 master_latch(.en (clk), .in (in), .out (out));
endmodule

module latch_word_width72_7(en, in, out);
  input en;
  input [71:0] in;
  output [71:0] out;
  wire en;
  wire [71:0] in;
  wire [71:0] out;
  DFFSNQ_X1 \_out_reg[63] (.SN (1'b1), .CLK (en), .D (in[63]), .Q
       (out[63]));
  DFFSNQ_X1 \_out_reg[70] (.SN (1'b1), .CLK (en), .D (in[70]), .Q
       (out[70]));
  DFFSNQ_X1 \_out_reg[68] (.SN (1'b1), .CLK (en), .D (in[68]), .Q
       (out[68]));
  DFFSNQ_X1 \_out_reg[64] (.SN (1'b1), .CLK (en), .D (in[64]), .Q
       (out[64]));
  DFFSNQ_X1 \_out_reg[56] (.SN (1'b1), .CLK (en), .D (in[56]), .Q
       (out[56]));
  DFFSNQ_X1 \_out_reg[40] (.SN (1'b1), .CLK (en), .D (in[40]), .Q
       (out[40]));
  DFFSNQ_X1 \_out_reg[8] (.SN (1'b1), .CLK (en), .D (in[8]), .Q
       (out[8]));
  DFFSNQ_X1 \_out_reg[7] (.SN (1'b1), .CLK (en), .D (in[7]), .Q
       (out[7]));
  DFFSNQ_X1 \_out_reg[39] (.SN (1'b1), .CLK (en), .D (in[39]), .Q
       (out[39]));
  DFFSNQ_X1 \_out_reg[6] (.SN (1'b1), .CLK (en), .D (in[6]), .Q
       (out[6]));
  DFFSNQ_X1 \_out_reg[5] (.SN (1'b1), .CLK (en), .D (in[5]), .Q
       (out[5]));
  DFFSNQ_X1 \_out_reg[55] (.SN (1'b1), .CLK (en), .D (in[55]), .Q
       (out[55]));
  DFFSNQ_X1 \_out_reg[38] (.SN (1'b1), .CLK (en), .D (in[38]), .Q
       (out[38]));
  DFFSNQ_X1 \_out_reg[4] (.SN (1'b1), .CLK (en), .D (in[4]), .Q
       (out[4]));
  DFFSNQ_X1 \_out_reg[3] (.SN (1'b1), .CLK (en), .D (in[3]), .Q
       (out[3]));
  DFFSNQ_X1 \_out_reg[37] (.SN (1'b1), .CLK (en), .D (in[37]), .Q
       (out[37]));
  DFFSNQ_X1 \_out_reg[2] (.SN (1'b1), .CLK (en), .D (in[2]), .Q
       (out[2]));
  DFFSNQ_X1 \_out_reg[1] (.SN (1'b1), .CLK (en), .D (in[1]), .Q
       (out[1]));
  DFFSNQ_X1 \_out_reg[71] (.SN (1'b1), .CLK (en), .D (in[71]), .Q
       (out[71]));
  DFFSNQ_X1 \_out_reg[54] (.SN (1'b1), .CLK (en), .D (in[54]), .Q
       (out[54]));
  DFFSNQ_X1 \_out_reg[36] (.SN (1'b1), .CLK (en), .D (in[36]), .Q
       (out[36]));
  DFFSNQ_X1 \_out_reg[0] (.SN (1'b1), .CLK (en), .D (in[0]), .Q
       (out[0]));
  DFFSNQ_X1 \_out_reg[35] (.SN (1'b1), .CLK (en), .D (in[35]), .Q
       (out[35]));
  DFFSNQ_X1 \_out_reg[53] (.SN (1'b1), .CLK (en), .D (in[53]), .Q
       (out[53]));
  DFFSNQ_X1 \_out_reg[34] (.SN (1'b1), .CLK (en), .D (in[34]), .Q
       (out[34]));
  DFFSNQ_X1 \_out_reg[33] (.SN (1'b1), .CLK (en), .D (in[33]), .Q
       (out[33]));
  DFFSNQ_X1 \_out_reg[67] (.SN (1'b1), .CLK (en), .D (in[67]), .Q
       (out[67]));
  DFFSNQ_X1 \_out_reg[62] (.SN (1'b1), .CLK (en), .D (in[62]), .Q
       (out[62]));
  DFFSNQ_X1 \_out_reg[52] (.SN (1'b1), .CLK (en), .D (in[52]), .Q
       (out[52]));
  DFFSNQ_X1 \_out_reg[32] (.SN (1'b1), .CLK (en), .D (in[32]), .Q
       (out[32]));
  DFFSNQ_X1 \_out_reg[31] (.SN (1'b1), .CLK (en), .D (in[31]), .Q
       (out[31]));
  DFFSNQ_X1 \_out_reg[51] (.SN (1'b1), .CLK (en), .D (in[51]), .Q
       (out[51]));
  DFFSNQ_X1 \_out_reg[30] (.SN (1'b1), .CLK (en), .D (in[30]), .Q
       (out[30]));
  DFFSNQ_X1 \_out_reg[29] (.SN (1'b1), .CLK (en), .D (in[29]), .Q
       (out[29]));
  DFFSNQ_X1 \_out_reg[61] (.SN (1'b1), .CLK (en), .D (in[61]), .Q
       (out[61]));
  DFFSNQ_X1 \_out_reg[50] (.SN (1'b1), .CLK (en), .D (in[50]), .Q
       (out[50]));
  DFFSNQ_X1 \_out_reg[45] (.SN (1'b1), .CLK (en), .D (in[45]), .Q
       (out[45]));
  DFFSNQ_X1 \_out_reg[27] (.SN (1'b1), .CLK (en), .D (in[27]), .Q
       (out[27]));
  DFFSNQ_X1 \_out_reg[49] (.SN (1'b1), .CLK (en), .D (in[49]), .Q
       (out[49]));
  DFFSNQ_X1 \_out_reg[26] (.SN (1'b1), .CLK (en), .D (in[26]), .Q
       (out[26]));
  DFFSNQ_X1 \_out_reg[25] (.SN (1'b1), .CLK (en), .D (in[25]), .Q
       (out[25]));
  DFFSNQ_X1 \_out_reg[69] (.SN (1'b1), .CLK (en), .D (in[69]), .Q
       (out[69]));
  DFFSNQ_X1 \_out_reg[66] (.SN (1'b1), .CLK (en), .D (in[66]), .Q
       (out[66]));
  DFFSNQ_X1 \_out_reg[60] (.SN (1'b1), .CLK (en), .D (in[60]), .Q
       (out[60]));
  DFFSNQ_X1 \_out_reg[48] (.SN (1'b1), .CLK (en), .D (in[48]), .Q
       (out[48]));
  DFFSNQ_X1 \_out_reg[24] (.SN (1'b1), .CLK (en), .D (in[24]), .Q
       (out[24]));
  DFFSNQ_X1 \_out_reg[23] (.SN (1'b1), .CLK (en), .D (in[23]), .Q
       (out[23]));
  DFFSNQ_X1 \_out_reg[47] (.SN (1'b1), .CLK (en), .D (in[47]), .Q
       (out[47]));
  DFFSNQ_X1 \_out_reg[22] (.SN (1'b1), .CLK (en), .D (in[22]), .Q
       (out[22]));
  DFFSNQ_X1 \_out_reg[21] (.SN (1'b1), .CLK (en), .D (in[21]), .Q
       (out[21]));
  DFFSNQ_X1 \_out_reg[59] (.SN (1'b1), .CLK (en), .D (in[59]), .Q
       (out[59]));
  DFFSNQ_X1 \_out_reg[46] (.SN (1'b1), .CLK (en), .D (in[46]), .Q
       (out[46]));
  DFFSNQ_X1 \_out_reg[20] (.SN (1'b1), .CLK (en), .D (in[20]), .Q
       (out[20]));
  DFFSNQ_X1 \_out_reg[19] (.SN (1'b1), .CLK (en), .D (in[19]), .Q
       (out[19]));
  DFFSNQ_X1 \_out_reg[28] (.SN (1'b1), .CLK (en), .D (in[28]), .Q
       (out[28]));
  DFFSNQ_X1 \_out_reg[18] (.SN (1'b1), .CLK (en), .D (in[18]), .Q
       (out[18]));
  DFFSNQ_X1 \_out_reg[17] (.SN (1'b1), .CLK (en), .D (in[17]), .Q
       (out[17]));
  DFFSNQ_X1 \_out_reg[65] (.SN (1'b1), .CLK (en), .D (in[65]), .Q
       (out[65]));
  DFFSNQ_X1 \_out_reg[58] (.SN (1'b1), .CLK (en), .D (in[58]), .Q
       (out[58]));
  DFFSNQ_X1 \_out_reg[44] (.SN (1'b1), .CLK (en), .D (in[44]), .Q
       (out[44]));
  DFFSNQ_X1 \_out_reg[16] (.SN (1'b1), .CLK (en), .D (in[16]), .Q
       (out[16]));
  DFFSNQ_X1 \_out_reg[15] (.SN (1'b1), .CLK (en), .D (in[15]), .Q
       (out[15]));
  DFFSNQ_X1 \_out_reg[43] (.SN (1'b1), .CLK (en), .D (in[43]), .Q
       (out[43]));
  DFFSNQ_X1 \_out_reg[14] (.SN (1'b1), .CLK (en), .D (in[14]), .Q
       (out[14]));
  DFFSNQ_X1 \_out_reg[13] (.SN (1'b1), .CLK (en), .D (in[13]), .Q
       (out[13]));
  DFFSNQ_X1 \_out_reg[57] (.SN (1'b1), .CLK (en), .D (in[57]), .Q
       (out[57]));
  DFFSNQ_X1 \_out_reg[42] (.SN (1'b1), .CLK (en), .D (in[42]), .Q
       (out[42]));
  DFFSNQ_X1 \_out_reg[12] (.SN (1'b1), .CLK (en), .D (in[12]), .Q
       (out[12]));
  DFFSNQ_X1 \_out_reg[11] (.SN (1'b1), .CLK (en), .D (in[11]), .Q
       (out[11]));
  DFFSNQ_X1 \_out_reg[41] (.SN (1'b1), .CLK (en), .D (in[41]), .Q
       (out[41]));
  DFFSNQ_X1 \_out_reg[10] (.SN (1'b1), .CLK (en), .D (in[10]), .Q
       (out[10]));
  DFFSNQ_X1 \_out_reg[9] (.SN (1'b1), .CLK (en), .D (in[9]), .Q
       (out[9]));
endmodule

module bypass_latch_width72_7(clk, in, out);
  input clk;
  input [71:0] in;
  output [71:0] out;
  wire clk;
  wire [71:0] in;
  wire [71:0] out;
  latch_word_width72_7 master_latch(.en (clk), .in (in), .out (out));
endmodule

module bypass_latch_chain(clk, en, in, out);
  input clk, en;
  input [71:0] in;
  output [71:0] out;
  wire clk, en;
  wire [71:0] in;
  wire [71:0] out;
  wire [71:0] \conn[1] ;
  wire [71:0] \conn[2] ;
  wire [71:0] \conn[3] ;
  wire [71:0] \conn[4] ;
  wire [71:0] \conn[5] ;
  wire [71:0] \conn[6] ;
  wire [71:0] \conn[7] ;
  wire n_2;
  bypass_latch_width72 \chain[0].bypass_latch1 (.clk (n_2), .in (in),
       .out ({\conn[1] [71], \conn[1] [70], \conn[1] [69], \conn[1]
       [68], \conn[1] [67], \conn[1] [66], \conn[1] [65], \conn[1]
       [64], \conn[1] [63], \conn[1] [62], \conn[1] [61], \conn[1]
       [60], \conn[1] [59], \conn[1] [58], \conn[1] [57], \conn[1]
       [56], \conn[1] [55], \conn[1] [54], \conn[1] [53], \conn[1]
       [52], \conn[1] [51], \conn[1] [50], \conn[1] [49], \conn[1]
       [48], \conn[1] [47], \conn[1] [46], \conn[1] [45], \conn[1]
       [44], \conn[1] [43], \conn[1] [42], \conn[1] [41], \conn[1]
       [40], \conn[1] [39], \conn[1] [38], \conn[1] [37], \conn[1]
       [36], \conn[1] [35], \conn[1] [34], \conn[1] [33], \conn[1]
       [32], \conn[1] [31], \conn[1] [30], \conn[1] [29], \conn[1]
       [28], \conn[1] [27], \conn[1] [26], \conn[1] [25], \conn[1]
       [24], \conn[1] [23], \conn[1] [22], \conn[1] [21], \conn[1]
       [20], \conn[1] [19], \conn[1] [18], \conn[1] [17], \conn[1]
       [16], \conn[1] [15], \conn[1] [14], \conn[1] [13], \conn[1]
       [12], \conn[1] [11], \conn[1] [10], \conn[1] [9], \conn[1] [8],
       \conn[1] [7], \conn[1] [6], \conn[1] [5], \conn[1] [4],
       \conn[1] [3], \conn[1] [2], \conn[1] [1], \conn[1] [0]}));
  bypass_latch_width72_1 \chain[1].bypass_latch1 (.clk (n_2), .in
       ({\conn[1] [71], \conn[1] [70], \conn[1] [69], \conn[1] [68],
       \conn[1] [67], \conn[1] [66], \conn[1] [65], \conn[1] [64],
       \conn[1] [63], \conn[1] [62], \conn[1] [61], \conn[1] [60],
       \conn[1] [59], \conn[1] [58], \conn[1] [57], \conn[1] [56],
       \conn[1] [55], \conn[1] [54], \conn[1] [53], \conn[1] [52],
       \conn[1] [51], \conn[1] [50], \conn[1] [49], \conn[1] [48],
       \conn[1] [47], \conn[1] [46], \conn[1] [45], \conn[1] [44],
       \conn[1] [43], \conn[1] [42], \conn[1] [41], \conn[1] [40],
       \conn[1] [39], \conn[1] [38], \conn[1] [37], \conn[1] [36],
       \conn[1] [35], \conn[1] [34], \conn[1] [33], \conn[1] [32],
       \conn[1] [31], \conn[1] [30], \conn[1] [29], \conn[1] [28],
       \conn[1] [27], \conn[1] [26], \conn[1] [25], \conn[1] [24],
       \conn[1] [23], \conn[1] [22], \conn[1] [21], \conn[1] [20],
       \conn[1] [19], \conn[1] [18], \conn[1] [17], \conn[1] [16],
       \conn[1] [15], \conn[1] [14], \conn[1] [13], \conn[1] [12],
       \conn[1] [11], \conn[1] [10], \conn[1] [9], \conn[1] [8],
       \conn[1] [7], \conn[1] [6], \conn[1] [5], \conn[1] [4],
       \conn[1] [3], \conn[1] [2], \conn[1] [1], \conn[1] [0]}), .out
       ({\conn[2] [71], \conn[2] [70], \conn[2] [69], \conn[2] [68],
       \conn[2] [67], \conn[2] [66], \conn[2] [65], \conn[2] [64],
       \conn[2] [63], \conn[2] [62], \conn[2] [61], \conn[2] [60],
       \conn[2] [59], \conn[2] [58], \conn[2] [57], \conn[2] [56],
       \conn[2] [55], \conn[2] [54], \conn[2] [53], \conn[2] [52],
       \conn[2] [51], \conn[2] [50], \conn[2] [49], \conn[2] [48],
       \conn[2] [47], \conn[2] [46], \conn[2] [45], \conn[2] [44],
       \conn[2] [43], \conn[2] [42], \conn[2] [41], \conn[2] [40],
       \conn[2] [39], \conn[2] [38], \conn[2] [37], \conn[2] [36],
       \conn[2] [35], \conn[2] [34], \conn[2] [33], \conn[2] [32],
       \conn[2] [31], \conn[2] [30], \conn[2] [29], \conn[2] [28],
       \conn[2] [27], \conn[2] [26], \conn[2] [25], \conn[2] [24],
       \conn[2] [23], \conn[2] [22], \conn[2] [21], \conn[2] [20],
       \conn[2] [19], \conn[2] [18], \conn[2] [17], \conn[2] [16],
       \conn[2] [15], \conn[2] [14], \conn[2] [13], \conn[2] [12],
       \conn[2] [11], \conn[2] [10], \conn[2] [9], \conn[2] [8],
       \conn[2] [7], \conn[2] [6], \conn[2] [5], \conn[2] [4],
       \conn[2] [3], \conn[2] [2], \conn[2] [1], \conn[2] [0]}));
  bypass_latch_width72_2 \chain[2].bypass_latch1 (.clk (n_2), .in
       ({\conn[2] [71], \conn[2] [70], \conn[2] [69], \conn[2] [68],
       \conn[2] [67], \conn[2] [66], \conn[2] [65], \conn[2] [64],
       \conn[2] [63], \conn[2] [62], \conn[2] [61], \conn[2] [60],
       \conn[2] [59], \conn[2] [58], \conn[2] [57], \conn[2] [56],
       \conn[2] [55], \conn[2] [54], \conn[2] [53], \conn[2] [52],
       \conn[2] [51], \conn[2] [50], \conn[2] [49], \conn[2] [48],
       \conn[2] [47], \conn[2] [46], \conn[2] [45], \conn[2] [44],
       \conn[2] [43], \conn[2] [42], \conn[2] [41], \conn[2] [40],
       \conn[2] [39], \conn[2] [38], \conn[2] [37], \conn[2] [36],
       \conn[2] [35], \conn[2] [34], \conn[2] [33], \conn[2] [32],
       \conn[2] [31], \conn[2] [30], \conn[2] [29], \conn[2] [28],
       \conn[2] [27], \conn[2] [26], \conn[2] [25], \conn[2] [24],
       \conn[2] [23], \conn[2] [22], \conn[2] [21], \conn[2] [20],
       \conn[2] [19], \conn[2] [18], \conn[2] [17], \conn[2] [16],
       \conn[2] [15], \conn[2] [14], \conn[2] [13], \conn[2] [12],
       \conn[2] [11], \conn[2] [10], \conn[2] [9], \conn[2] [8],
       \conn[2] [7], \conn[2] [6], \conn[2] [5], \conn[2] [4],
       \conn[2] [3], \conn[2] [2], \conn[2] [1], \conn[2] [0]}), .out
       ({\conn[3] [71], \conn[3] [70], \conn[3] [69], \conn[3] [68],
       \conn[3] [67], \conn[3] [66], \conn[3] [65], \conn[3] [64],
       \conn[3] [63], \conn[3] [62], \conn[3] [61], \conn[3] [60],
       \conn[3] [59], \conn[3] [58], \conn[3] [57], \conn[3] [56],
       \conn[3] [55], \conn[3] [54], \conn[3] [53], \conn[3] [52],
       \conn[3] [51], \conn[3] [50], \conn[3] [49], \conn[3] [48],
       \conn[3] [47], \conn[3] [46], \conn[3] [45], \conn[3] [44],
       \conn[3] [43], \conn[3] [42], \conn[3] [41], \conn[3] [40],
       \conn[3] [39], \conn[3] [38], \conn[3] [37], \conn[3] [36],
       \conn[3] [35], \conn[3] [34], \conn[3] [33], \conn[3] [32],
       \conn[3] [31], \conn[3] [30], \conn[3] [29], \conn[3] [28],
       \conn[3] [27], \conn[3] [26], \conn[3] [25], \conn[3] [24],
       \conn[3] [23], \conn[3] [22], \conn[3] [21], \conn[3] [20],
       \conn[3] [19], \conn[3] [18], \conn[3] [17], \conn[3] [16],
       \conn[3] [15], \conn[3] [14], \conn[3] [13], \conn[3] [12],
       \conn[3] [11], \conn[3] [10], \conn[3] [9], \conn[3] [8],
       \conn[3] [7], \conn[3] [6], \conn[3] [5], \conn[3] [4],
       \conn[3] [3], \conn[3] [2], \conn[3] [1], \conn[3] [0]}));
  bypass_latch_width72_3 \chain[3].bypass_latch1 (.clk (n_2), .in
       ({\conn[3] [71], \conn[3] [70], \conn[3] [69], \conn[3] [68],
       \conn[3] [67], \conn[3] [66], \conn[3] [65], \conn[3] [64],
       \conn[3] [63], \conn[3] [62], \conn[3] [61], \conn[3] [60],
       \conn[3] [59], \conn[3] [58], \conn[3] [57], \conn[3] [56],
       \conn[3] [55], \conn[3] [54], \conn[3] [53], \conn[3] [52],
       \conn[3] [51], \conn[3] [50], \conn[3] [49], \conn[3] [48],
       \conn[3] [47], \conn[3] [46], \conn[3] [45], \conn[3] [44],
       \conn[3] [43], \conn[3] [42], \conn[3] [41], \conn[3] [40],
       \conn[3] [39], \conn[3] [38], \conn[3] [37], \conn[3] [36],
       \conn[3] [35], \conn[3] [34], \conn[3] [33], \conn[3] [32],
       \conn[3] [31], \conn[3] [30], \conn[3] [29], \conn[3] [28],
       \conn[3] [27], \conn[3] [26], \conn[3] [25], \conn[3] [24],
       \conn[3] [23], \conn[3] [22], \conn[3] [21], \conn[3] [20],
       \conn[3] [19], \conn[3] [18], \conn[3] [17], \conn[3] [16],
       \conn[3] [15], \conn[3] [14], \conn[3] [13], \conn[3] [12],
       \conn[3] [11], \conn[3] [10], \conn[3] [9], \conn[3] [8],
       \conn[3] [7], \conn[3] [6], \conn[3] [5], \conn[3] [4],
       \conn[3] [3], \conn[3] [2], \conn[3] [1], \conn[3] [0]}), .out
       ({\conn[4] [71], \conn[4] [70], \conn[4] [69], \conn[4] [68],
       \conn[4] [67], \conn[4] [66], \conn[4] [65], \conn[4] [64],
       \conn[4] [63], \conn[4] [62], \conn[4] [61], \conn[4] [60],
       \conn[4] [59], \conn[4] [58], \conn[4] [57], \conn[4] [56],
       \conn[4] [55], \conn[4] [54], \conn[4] [53], \conn[4] [52],
       \conn[4] [51], \conn[4] [50], \conn[4] [49], \conn[4] [48],
       \conn[4] [47], \conn[4] [46], \conn[4] [45], \conn[4] [44],
       \conn[4] [43], \conn[4] [42], \conn[4] [41], \conn[4] [40],
       \conn[4] [39], \conn[4] [38], \conn[4] [37], \conn[4] [36],
       \conn[4] [35], \conn[4] [34], \conn[4] [33], \conn[4] [32],
       \conn[4] [31], \conn[4] [30], \conn[4] [29], \conn[4] [28],
       \conn[4] [27], \conn[4] [26], \conn[4] [25], \conn[4] [24],
       \conn[4] [23], \conn[4] [22], \conn[4] [21], \conn[4] [20],
       \conn[4] [19], \conn[4] [18], \conn[4] [17], \conn[4] [16],
       \conn[4] [15], \conn[4] [14], \conn[4] [13], \conn[4] [12],
       \conn[4] [11], \conn[4] [10], \conn[4] [9], \conn[4] [8],
       \conn[4] [7], \conn[4] [6], \conn[4] [5], \conn[4] [4],
       \conn[4] [3], \conn[4] [2], \conn[4] [1], \conn[4] [0]}));
  bypass_latch_width72_4 \chain[4].bypass_latch1 (.clk (n_2), .in
       ({\conn[4] [71], \conn[4] [70], \conn[4] [69], \conn[4] [68],
       \conn[4] [67], \conn[4] [66], \conn[4] [65], \conn[4] [64],
       \conn[4] [63], \conn[4] [62], \conn[4] [61], \conn[4] [60],
       \conn[4] [59], \conn[4] [58], \conn[4] [57], \conn[4] [56],
       \conn[4] [55], \conn[4] [54], \conn[4] [53], \conn[4] [52],
       \conn[4] [51], \conn[4] [50], \conn[4] [49], \conn[4] [48],
       \conn[4] [47], \conn[4] [46], \conn[4] [45], \conn[4] [44],
       \conn[4] [43], \conn[4] [42], \conn[4] [41], \conn[4] [40],
       \conn[4] [39], \conn[4] [38], \conn[4] [37], \conn[4] [36],
       \conn[4] [35], \conn[4] [34], \conn[4] [33], \conn[4] [32],
       \conn[4] [31], \conn[4] [30], \conn[4] [29], \conn[4] [28],
       \conn[4] [27], \conn[4] [26], \conn[4] [25], \conn[4] [24],
       \conn[4] [23], \conn[4] [22], \conn[4] [21], \conn[4] [20],
       \conn[4] [19], \conn[4] [18], \conn[4] [17], \conn[4] [16],
       \conn[4] [15], \conn[4] [14], \conn[4] [13], \conn[4] [12],
       \conn[4] [11], \conn[4] [10], \conn[4] [9], \conn[4] [8],
       \conn[4] [7], \conn[4] [6], \conn[4] [5], \conn[4] [4],
       \conn[4] [3], \conn[4] [2], \conn[4] [1], \conn[4] [0]}), .out
       ({\conn[5] [71], \conn[5] [70], \conn[5] [69], \conn[5] [68],
       \conn[5] [67], \conn[5] [66], \conn[5] [65], \conn[5] [64],
       \conn[5] [63], \conn[5] [62], \conn[5] [61], \conn[5] [60],
       \conn[5] [59], \conn[5] [58], \conn[5] [57], \conn[5] [56],
       \conn[5] [55], \conn[5] [54], \conn[5] [53], \conn[5] [52],
       \conn[5] [51], \conn[5] [50], \conn[5] [49], \conn[5] [48],
       \conn[5] [47], \conn[5] [46], \conn[5] [45], \conn[5] [44],
       \conn[5] [43], \conn[5] [42], \conn[5] [41], \conn[5] [40],
       \conn[5] [39], \conn[5] [38], \conn[5] [37], \conn[5] [36],
       \conn[5] [35], \conn[5] [34], \conn[5] [33], \conn[5] [32],
       \conn[5] [31], \conn[5] [30], \conn[5] [29], \conn[5] [28],
       \conn[5] [27], \conn[5] [26], \conn[5] [25], \conn[5] [24],
       \conn[5] [23], \conn[5] [22], \conn[5] [21], \conn[5] [20],
       \conn[5] [19], \conn[5] [18], \conn[5] [17], \conn[5] [16],
       \conn[5] [15], \conn[5] [14], \conn[5] [13], \conn[5] [12],
       \conn[5] [11], \conn[5] [10], \conn[5] [9], \conn[5] [8],
       \conn[5] [7], \conn[5] [6], \conn[5] [5], \conn[5] [4],
       \conn[5] [3], \conn[5] [2], \conn[5] [1], \conn[5] [0]}));
  bypass_latch_width72_5 \chain[5].bypass_latch1 (.clk (n_2), .in
       ({\conn[5] [71], \conn[5] [70], \conn[5] [69], \conn[5] [68],
       \conn[5] [67], \conn[5] [66], \conn[5] [65], \conn[5] [64],
       \conn[5] [63], \conn[5] [62], \conn[5] [61], \conn[5] [60],
       \conn[5] [59], \conn[5] [58], \conn[5] [57], \conn[5] [56],
       \conn[5] [55], \conn[5] [54], \conn[5] [53], \conn[5] [52],
       \conn[5] [51], \conn[5] [50], \conn[5] [49], \conn[5] [48],
       \conn[5] [47], \conn[5] [46], \conn[5] [45], \conn[5] [44],
       \conn[5] [43], \conn[5] [42], \conn[5] [41], \conn[5] [40],
       \conn[5] [39], \conn[5] [38], \conn[5] [37], \conn[5] [36],
       \conn[5] [35], \conn[5] [34], \conn[5] [33], \conn[5] [32],
       \conn[5] [31], \conn[5] [30], \conn[5] [29], \conn[5] [28],
       \conn[5] [27], \conn[5] [26], \conn[5] [25], \conn[5] [24],
       \conn[5] [23], \conn[5] [22], \conn[5] [21], \conn[5] [20],
       \conn[5] [19], \conn[5] [18], \conn[5] [17], \conn[5] [16],
       \conn[5] [15], \conn[5] [14], \conn[5] [13], \conn[5] [12],
       \conn[5] [11], \conn[5] [10], \conn[5] [9], \conn[5] [8],
       \conn[5] [7], \conn[5] [6], \conn[5] [5], \conn[5] [4],
       \conn[5] [3], \conn[5] [2], \conn[5] [1], \conn[5] [0]}), .out
       ({\conn[6] [71], \conn[6] [70], \conn[6] [69], \conn[6] [68],
       \conn[6] [67], \conn[6] [66], \conn[6] [65], \conn[6] [64],
       \conn[6] [63], \conn[6] [62], \conn[6] [61], \conn[6] [60],
       \conn[6] [59], \conn[6] [58], \conn[6] [57], \conn[6] [56],
       \conn[6] [55], \conn[6] [54], \conn[6] [53], \conn[6] [52],
       \conn[6] [51], \conn[6] [50], \conn[6] [49], \conn[6] [48],
       \conn[6] [47], \conn[6] [46], \conn[6] [45], \conn[6] [44],
       \conn[6] [43], \conn[6] [42], \conn[6] [41], \conn[6] [40],
       \conn[6] [39], \conn[6] [38], \conn[6] [37], \conn[6] [36],
       \conn[6] [35], \conn[6] [34], \conn[6] [33], \conn[6] [32],
       \conn[6] [31], \conn[6] [30], \conn[6] [29], \conn[6] [28],
       \conn[6] [27], \conn[6] [26], \conn[6] [25], \conn[6] [24],
       \conn[6] [23], \conn[6] [22], \conn[6] [21], \conn[6] [20],
       \conn[6] [19], \conn[6] [18], \conn[6] [17], \conn[6] [16],
       \conn[6] [15], \conn[6] [14], \conn[6] [13], \conn[6] [12],
       \conn[6] [11], \conn[6] [10], \conn[6] [9], \conn[6] [8],
       \conn[6] [7], \conn[6] [6], \conn[6] [5], \conn[6] [4],
       \conn[6] [3], \conn[6] [2], \conn[6] [1], \conn[6] [0]}));
  bypass_latch_width72_6 \chain[6].bypass_latch1 (.clk (n_2), .in
       ({\conn[6] [71], \conn[6] [70], \conn[6] [69], \conn[6] [68],
       \conn[6] [67], \conn[6] [66], \conn[6] [65], \conn[6] [64],
       \conn[6] [63], \conn[6] [62], \conn[6] [61], \conn[6] [60],
       \conn[6] [59], \conn[6] [58], \conn[6] [57], \conn[6] [56],
       \conn[6] [55], \conn[6] [54], \conn[6] [53], \conn[6] [52],
       \conn[6] [51], \conn[6] [50], \conn[6] [49], \conn[6] [48],
       \conn[6] [47], \conn[6] [46], \conn[6] [45], \conn[6] [44],
       \conn[6] [43], \conn[6] [42], \conn[6] [41], \conn[6] [40],
       \conn[6] [39], \conn[6] [38], \conn[6] [37], \conn[6] [36],
       \conn[6] [35], \conn[6] [34], \conn[6] [33], \conn[6] [32],
       \conn[6] [31], \conn[6] [30], \conn[6] [29], \conn[6] [28],
       \conn[6] [27], \conn[6] [26], \conn[6] [25], \conn[6] [24],
       \conn[6] [23], \conn[6] [22], \conn[6] [21], \conn[6] [20],
       \conn[6] [19], \conn[6] [18], \conn[6] [17], \conn[6] [16],
       \conn[6] [15], \conn[6] [14], \conn[6] [13], \conn[6] [12],
       \conn[6] [11], \conn[6] [10], \conn[6] [9], \conn[6] [8],
       \conn[6] [7], \conn[6] [6], \conn[6] [5], \conn[6] [4],
       \conn[6] [3], \conn[6] [2], \conn[6] [1], \conn[6] [0]}), .out
       ({\conn[7] [71], \conn[7] [70], \conn[7] [69], \conn[7] [68],
       \conn[7] [67], \conn[7] [66], \conn[7] [65], \conn[7] [64],
       \conn[7] [63], \conn[7] [62], \conn[7] [61], \conn[7] [60],
       \conn[7] [59], \conn[7] [58], \conn[7] [57], \conn[7] [56],
       \conn[7] [55], \conn[7] [54], \conn[7] [53], \conn[7] [52],
       \conn[7] [51], \conn[7] [50], \conn[7] [49], \conn[7] [48],
       \conn[7] [47], \conn[7] [46], \conn[7] [45], \conn[7] [44],
       \conn[7] [43], \conn[7] [42], \conn[7] [41], \conn[7] [40],
       \conn[7] [39], \conn[7] [38], \conn[7] [37], \conn[7] [36],
       \conn[7] [35], \conn[7] [34], \conn[7] [33], \conn[7] [32],
       \conn[7] [31], \conn[7] [30], \conn[7] [29], \conn[7] [28],
       \conn[7] [27], \conn[7] [26], \conn[7] [25], \conn[7] [24],
       \conn[7] [23], \conn[7] [22], \conn[7] [21], \conn[7] [20],
       \conn[7] [19], \conn[7] [18], \conn[7] [17], \conn[7] [16],
       \conn[7] [15], \conn[7] [14], \conn[7] [13], \conn[7] [12],
       \conn[7] [11], \conn[7] [10], \conn[7] [9], \conn[7] [8],
       \conn[7] [7], \conn[7] [6], \conn[7] [5], \conn[7] [4],
       \conn[7] [3], \conn[7] [2], \conn[7] [1], \conn[7] [0]}));
  bypass_latch_width72_7 \chain[7].bypass_latch1 (.clk (n_2), .in
       ({\conn[7] [71], \conn[7] [70], \conn[7] [69], \conn[7] [68],
       \conn[7] [67], \conn[7] [66], \conn[7] [65], \conn[7] [64],
       \conn[7] [63], \conn[7] [62], \conn[7] [61], \conn[7] [60],
       \conn[7] [59], \conn[7] [58], \conn[7] [57], \conn[7] [56],
       \conn[7] [55], \conn[7] [54], \conn[7] [53], \conn[7] [52],
       \conn[7] [51], \conn[7] [50], \conn[7] [49], \conn[7] [48],
       \conn[7] [47], \conn[7] [46], \conn[7] [45], \conn[7] [44],
       \conn[7] [43], \conn[7] [42], \conn[7] [41], \conn[7] [40],
       \conn[7] [39], \conn[7] [38], \conn[7] [37], \conn[7] [36],
       \conn[7] [35], \conn[7] [34], \conn[7] [33], \conn[7] [32],
       \conn[7] [31], \conn[7] [30], \conn[7] [29], \conn[7] [28],
       \conn[7] [27], \conn[7] [26], \conn[7] [25], \conn[7] [24],
       \conn[7] [23], \conn[7] [22], \conn[7] [21], \conn[7] [20],
       \conn[7] [19], \conn[7] [18], \conn[7] [17], \conn[7] [16],
       \conn[7] [15], \conn[7] [14], \conn[7] [13], \conn[7] [12],
       \conn[7] [11], \conn[7] [10], \conn[7] [9], \conn[7] [8],
       \conn[7] [7], \conn[7] [6], \conn[7] [5], \conn[7] [4],
       \conn[7] [3], \conn[7] [2], \conn[7] [1], \conn[7] [0]}), .out
       (out));
  AND2_X1 g22(.A1 (clk), .A2 (en), .Z (n_2));
endmodule

